{"version":3,"sources":["components/Navbar.js","shared/Jumbotron.js","components/Homepage.js","config.js","api/ApiUtils.js","components/import/OrdersTable.js","components/import/ImportPageModal.js","components/import/OrdersView.js","api/BackendApi.js","components/import/FileUploadArea.js","shared/Spinner.js","components/import/ImportPage.js","components/update/UpdatePage.js","components/orderwell/OrderWell.js","components/turnover/Turnover.js","App.js","index.js"],"names":["Navbar","useState","isOpen","setIsOpen","color","dark","expand","NavbarBrand","href","className","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","Jumbotron","children","Homepage","UPDATE_VENDORS","name","title","IMPORT_VENDORS","requires_file","file_type","handleResponse","response","ok","json","Error","OrdersTable","orders","handleEditClick","handleCheckboxClick","Table","bordered","striped","responsive","map","order","index","customer","deliver_to_attributes","key","Input","type","id","defaultChecked","onChange","first_name","last_name","address1","city","state","zip","country","Button","size","ImportPageModal","header","body","toggle","modalType","addresses","handleAddressSelection","Form","onSubmit","address","summaryline","Modal","ModalHeader","ModalBody","OrdersView","file","updateAddress","handleImport","setInitialState","activeOrderIndex","setActiveOrderIndex","selectedIndexes","setSelectedIndexes","modalOpen","setModalOpen","setAddresses","useEffect","x","idx","length","event","target","checked","parseInt","filter","postcode","url","fetch","method","then","catch","error","console","getPostcodeAddresses","selectedOrders","includes","value","elements","preventDefault","find","FileUploadArea","selectedVendor","handleFileSubmit","onDrop","useCallback","acceptedFiles","useDropzone","multiple","accept","getRootProps","getInputProps","icon","Spinner","style","ImportPage","setSelectedVendor","setOrders","setFile","loading","setLoading","showInitialView","setShowInitialView","getOrders","vendorName","vendor","options","formData","FormData","append","getOrdersJson","toast","VendorMenu","handleVendorClick","marginTop","premise","street","posttown","county","tempOrders","headers","Headers","JSON","stringify","importOrders","UpdatePage","dropdownOpen","setDropdownOpen","Dropdown","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","width","height","disabled","updateSpreadsheet","OrderWell","getOrderWell","range","sel","el","document","getElementById","createRange","window","getSelection","removeAllRanges","selectNodeContents","addRange","e","selectNode","createTextRange","moveToElementText","select","execCommand","date","rel","items","item","Turnover","turnover","setTurnover","currentMonth","moment","format","monthYearString","getTurnover","min","max","defaultValue","total_ex_vat","total_with_vat","library","add","faUpload","App","hideProgressBar","autoClose","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.31b6f20c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n\tNavbar as NavigationBar,\r\n\tCollapse,\r\n\tNavbarToggler,\r\n\tNavbarBrand,\r\n\tNav,\r\n\tNavLink,\r\n} from \"reactstrap\";\r\n\r\nfunction Navbar() {\r\n\tconst [isOpen, setIsOpen] = useState(false);\r\n\r\n\tconst toggle = () => setIsOpen(!isOpen);\r\n\r\n\treturn (\r\n\t\t<NavigationBar color=\"dark\" dark expand=\"md\">\r\n\t\t\t<NavbarBrand href=\"/\">\r\n\t\t\t\t<img className=\"logo\" src=\"/images/csc-logo.png\" alt=\"logo\" />\r\n\t\t\t</NavbarBrand>\r\n\t\t\t<NavbarBrand href=\"/\">CSC Services</NavbarBrand>\r\n\t\t\t<NavbarToggler onClick={toggle} />\r\n\t\t\t<Collapse isOpen={isOpen} navbar>\r\n\t\t\t\t<Nav className=\"mr-auto\" navbar>\r\n\t\t\t\t\t<NavLink href=\"/update\">Update Spreadsheet</NavLink>\r\n\t\t\t\t\t<NavLink href=\"/import\">Import</NavLink>\r\n\t\t\t\t\t<NavLink href=\"/turnover\">Turnover</NavLink>\r\n\t\t\t\t\t<NavLink href=\"/orderwell\">Order Well</NavLink>\r\n\t\t\t\t</Nav>\r\n\t\t\t</Collapse>\r\n\t\t</NavigationBar>\r\n\t);\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n\treturn <div className=\"jumbotron\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nimport Jumbotron from \"../shared/Jumbotron\";\r\n\r\nfunction Homepage() {\r\n\treturn (\r\n\t\t<Jumbotron>\r\n\t\t\t<span>Welcome to Canadian Spa Services</span>\r\n\t\t</Jumbotron>\r\n\t);\r\n}\r\n\r\nexport default Homepage;\r\n","export const API_BASE_URL =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"/api\"\r\n\t\t: \"http://localhost:5000/api\";\r\n\r\nexport const UPDATE_VENDORS = [\r\n\t{ name: \"bandq\", title: \"B&Q\" },\r\n\t{ name: \"homebase\", title: \"Homebase\" },\r\n\t{ name: \"jtf\", title: \"JTF\" },\r\n\t{ name: \"wayfair\", title: \"Wayfair\" },\r\n\t{ name: \"range\", title: \"The Range\" },\r\n\t{ name: \"travisperkins\", title: \"Travis Perkins\" },\r\n\t{ name: \"robert_dyas\", title: \"Robert Dyas\" },\r\n\t{ name: \"hornbach\", title: \"Hornbach\" },\r\n\t{ name: \"shop_direct\", title: \"Shop Direct\" },\r\n];\r\n\r\nexport const IMPORT_VENDORS = [\r\n\t{\r\n\t\tname: \"bandq\",\r\n\t\ttitle: \"B&Q CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"argos\",\r\n\t\ttitle: \"Argos CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"range\",\r\n\t\ttitle: \"The Range\",\r\n\t\trequires_file: false,\r\n\t\tfile_type: null,\r\n\t},\r\n\t{\r\n\t\tname: \"homebase\",\r\n\t\ttitle: \"Homebase XML\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".xml\",\r\n\t},\r\n\t{\r\n\t\tname: \"wayfair\",\r\n\t\ttitle: \"Wayfair CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"robert_dyas\",\r\n\t\ttitle: \"Robert Dyas CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"shop_direct\",\r\n\t\ttitle: \"Shop Direct TXT\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".txt\",\r\n\t},\r\n\t{\r\n\t\tname: \"globus\",\r\n\t\ttitle: \"Globus XML\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".xml\",\r\n\t},\r\n\t{\r\n\t\tname: \"hornbach\",\r\n\t\ttitle: \"Hornbach PDF\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".pdf\",\r\n\t},\r\n];\r\n","export function handleResponse(response) {\r\n\tif (response.ok) {\r\n\t\treturn response.json();\r\n\t} else {\r\n\t\tthrow new Error(\"Bad response.\");\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Table, Button, Input } from \"reactstrap\";\r\n\r\nfunction OrdersTable({ orders, handleEditClick, handleCheckboxClick }) {\r\n\treturn (\r\n\t\t<Table bordered striped responsive>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t<th>Address 1</th>\r\n\t\t\t\t\t<th>City</th>\r\n\t\t\t\t\t<th>County</th>\r\n\t\t\t\t\t<th>Postcode</th>\r\n\t\t\t\t\t<th>Country</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{orders.map((order, index) => {\r\n\t\t\t\t\tlet customer = order.deliver_to_attributes;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked=\"true\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{customer.first_name}</td>\r\n\t\t\t\t\t\t\t<td>{customer.last_name}</td>\r\n\t\t\t\t\t\t\t<td>{customer.address1}</td>\r\n\t\t\t\t\t\t\t<td>{customer.city}</td>\r\n\t\t\t\t\t\t\t<td>{customer.state}</td>\r\n\t\t\t\t\t\t\t<td>{customer.zip}</td>\r\n\t\t\t\t\t\t\t<td>{customer.country}</td>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\tonClick={handleEditClick}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEdit Address\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n}\r\n\r\nexport default OrdersTable;\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, Input, Button, Form } from \"reactstrap\";\r\n\r\nfunction ImportPageModal({\r\n\tisOpen,\r\n\ttoggle,\r\n\tmodalType,\r\n\taddresses,\r\n\thandleAddressSelection,\r\n}) {\r\n\tlet header, body;\r\n\tif (modalType === \"editAddress\") {\r\n\t\theader = \"Select address\";\r\n\t\tbody = (\r\n\t\t\t<Form onSubmit={handleAddressSelection}>\r\n\t\t\t\t<Input name=\"address\" type=\"select\">\r\n\t\t\t\t\t{addresses.map((address, index) => (\r\n\t\t\t\t\t\t<option key={index}>{address.summaryline}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Input>\r\n\t\t\t\t<div className=\"button-parent\">\r\n\t\t\t\t\t<Button color=\"danger\" onClick={toggle}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen}>\r\n\t\t\t<ModalHeader toggle={toggle}>{header}</ModalHeader>\r\n\t\t\t<ModalBody>{body}</ModalBody>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ImportPageModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { getPostcodeAddresses } from \"../../api/BackendApi\";\r\n\r\nimport OrdersTable from \"./OrdersTable\";\r\nimport ImportPageModal from \"./ImportPageModal\";\r\n\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction OrdersView({\r\n\torders,\r\n\tfile,\r\n\tupdateAddress,\r\n\thandleImport,\r\n\tsetInitialState,\r\n}) {\r\n\tconst [activeOrderIndex, setActiveOrderIndex] = useState([]);\r\n\tconst [selectedIndexes, setSelectedIndexes] = useState([]);\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [addresses, setAddresses] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedIndexes(orders.map((x, idx) => idx));\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tconst toggle = () => setModalOpen(!modalOpen);\r\n\r\n\tfunction handleCheckboxClick(event) {\r\n\t\tconst { id, checked } = event.target;\r\n\t\tlet index = parseInt(id);\r\n\t\tif (checked) {\r\n\t\t\tsetSelectedIndexes([...selectedIndexes, index]);\r\n\t\t} else {\r\n\t\t\tsetSelectedIndexes(selectedIndexes.filter((idx) => idx !== index));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleAddressSelection(event) {\r\n\t\tconst { value } = event.target.elements.address;\r\n\r\n\t\tevent.preventDefault();\r\n\t\tsetModalOpen(false);\r\n\r\n\t\t// Find selected address from dropdown\r\n\t\tconst address = addresses.find(\r\n\t\t\t(address) => address.summaryline === value\r\n\t\t);\r\n\t\tupdateAddress(activeOrderIndex, address);\r\n\t}\r\n\r\n\tfunction handleEditAddressClick(event) {\r\n\t\tconst { id } = event.target;\r\n\t\tlet index = parseInt(id);\r\n\r\n\t\tsetActiveOrderIndex(index);\r\n\r\n\t\tlet postcode = orders[index].deliver_to_attributes.zip;\r\n\t\tgetPostcodeAddresses(postcode).then((json) => {\r\n\t\t\tsetAddresses(json);\r\n\t\t\tsetModalOpen(true);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction handleImportClick() {\r\n\t\tlet selectedOrders = orders.filter((orders, idx) =>\r\n\t\t\tselectedIndexes.includes(idx)\r\n\t\t);\r\n\r\n\t\thandleImport(selectedOrders);\r\n\t}\r\n\r\n\treturn orders.length === 0 ? (\r\n\t\t<>\r\n\t\t\t<h5>No orders found.</h5>\r\n\t\t\t<Button color=\"danger\" onClick={setInitialState}>\r\n\t\t\t\tCancel\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t{file && <h5>File: {file.name}</h5>}\r\n\t\t\t<OrdersTable\r\n\t\t\t\torders={orders}\r\n\t\t\t\thandleCheckboxClick={handleCheckboxClick}\r\n\t\t\t\thandleEditClick={handleEditAddressClick}\r\n\t\t\t/>\r\n\t\t\t<div className=\"button-parent\">\r\n\t\t\t\t<Button color=\"danger\" onClick={setInitialState}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button color=\"primary\" onClick={handleImportClick}>\r\n\t\t\t\t\tImport\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<ImportPageModal\r\n\t\t\t\tisOpen={modalOpen}\r\n\t\t\t\ttoggle={toggle}\r\n\t\t\t\tmodalType={\"editAddress\"}\r\n\t\t\t\taddresses={addresses}\r\n\t\t\t\thandleAddressSelection={handleAddressSelection}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default OrdersView;\r\n","import { handleResponse } from \"./ApiUtils\";\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nexport function getOrdersJson(vendor, file) {\r\n\tlet url = `${API_BASE_URL}/orders?vendor=${vendor}`;\r\n\r\n\tlet options = {\r\n\t\tmethod: \"POST\",\r\n\t};\r\n\r\n\tif (file) {\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append(\"file\", file);\r\n\t\toptions.body = formData;\r\n\t}\r\n\r\n\treturn fetch(url, options)\r\n\t\t.then(handleResponse)\r\n\t\t.catch((error) => console.error(error));\r\n}\r\n\r\nexport function importOrders(orders) {\r\n\tlet url = `${API_BASE_URL}/import`;\r\n\tlet headers = new Headers({ \"content-type\": \"application/json\" });\r\n\r\n\tlet options = {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: headers,\r\n\t\tbody: JSON.stringify(orders),\r\n\t};\r\n\r\n\treturn fetch(url, options)\r\n\t\t.then(handleResponse)\r\n\t\t.catch((error) => console.error(error));\r\n}\r\n\r\nexport function getPostcodeAddresses(postcode) {\r\n\tlet url = `${API_BASE_URL}/postcoder?postcode=${postcode}`;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.catch((error) => console.error(error));\r\n}\r\n\r\nexport function updateSpreadsheet(vendor) {\r\n\tlet url = `${API_BASE_URL}/update?vendor=${vendor}`;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.catch((error) => console.error(error));\r\n}\r\n\r\nexport function getTurnover(date) {\r\n\tlet url = `${API_BASE_URL}/turnover?date=${date}`;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.catch((error) => console.error(error));\r\n}\r\n\r\nexport function getOrderWell() {\r\n\tlet url = `${API_BASE_URL}/orderwell`;\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t})\r\n\t\t.then(handleResponse)\r\n\t\t.catch((error) => console.error(error));\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport \"./FileUploadArea.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction FileUploadArea({ selectedVendor, handleFileSubmit }) {\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tif (acceptedFiles[0]) {\r\n\t\t\t\thandleFileSubmit(selectedVendor.name, acceptedFiles[0]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedVendor, handleFileSubmit]\r\n\t);\r\n\r\n\tconst { getRootProps, getInputProps } = useDropzone({\r\n\t\tonDrop,\r\n\t\tmultiple: false,\r\n\t\taccept: selectedVendor.file_type,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} className=\"dropzone-container\">\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<div className=\"dropzone-content\">\r\n\t\t\t\t<FontAwesomeIcon icon=\"upload\" />\r\n\t\t\t\t<span>Click to upload file ({selectedVendor.file_type})</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FileUploadArea;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { Spinner as ReactStrapSpinner } from \"reactstrap\";\r\n\r\nfunction Spinner({ style }) {\r\n\treturn <ReactStrapSpinner color=\"dark\" className=\"spinner\" style={style} />;\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { IMPORT_VENDORS } from \"../../config\";\r\nimport { getOrdersJson, importOrders } from \"../../api/BackendApi\";\r\n\r\nimport OrdersView from \"./OrdersView\";\r\nimport FileUploadArea from \"./FileUploadArea\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport Jumbotron from \"../../shared/Jumbotron\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction ImportPage() {\r\n\tconst [selectedVendor, setSelectedVendor] = useState(IMPORT_VENDORS[0]);\r\n\tconst [orders, setOrders] = useState([]);\r\n\tconst [file, setFile] = useState(null);\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [showInitialView, setShowInitialView] = useState(true);\r\n\r\n\tfunction handleVendorClick(vendor) {\r\n\t\tsetSelectedVendor(vendor);\r\n\r\n\t\tif (!vendor.requires_file) {\r\n\t\t\tgetOrders(vendor.name);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getOrders(vendorName, file) {\r\n\t\tsetLoading(true);\r\n\t\tgetOrdersJson(vendorName, file).then((json) => {\r\n\t\t\tif (json.error) {\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\ttoast.dark(\r\n\t\t\t\t\t\"Error getting orders, ensure you are uploading the correct file.\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tsetOrders(json);\r\n\t\t\t\tsetFile(file);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t\tsetShowInitialView(false);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction updateAddress(index, address) {\r\n\t\tconst { premise, street, posttown, county, postcode } = address;\r\n\r\n\t\tlet tempOrders = orders.map((order, idx) => {\r\n\t\t\tif (idx === index) {\r\n\t\t\t\torder.deliver_to_attributes.address1 = premise + \" \" + street;\r\n\t\t\t\torder.deliver_to_attributes.city = posttown;\r\n\t\t\t\torder.deliver_to_attributes.state = county;\r\n\t\t\t\torder.deliver_to_attributes.zip = postcode;\r\n\t\t\t}\r\n\t\t\treturn order;\r\n\t\t});\r\n\t\tsetOrders(tempOrders);\r\n\t}\r\n\r\n\tfunction handleImport(orders) {\r\n\t\ttoast.dark(\"Importing...\");\r\n\r\n\t\timportOrders(orders).then((json) => {\r\n\t\t\ttoast.dark(`Imported ${json.length} orders`);\r\n\t\t\tsetInitialState();\r\n\t\t});\r\n\t}\r\n\r\n\tfunction setInitialState() {\r\n\t\tsetSelectedVendor(IMPORT_VENDORS[0]);\r\n\t\tsetOrders([]);\r\n\t\tsetShowInitialView(true);\r\n\t}\r\n\r\n\tconst VendorMenu = () => {\r\n\t\treturn IMPORT_VENDORS.map((vendor, index) => (\r\n\t\t\t<Button\r\n\t\t\t\tkey={index}\r\n\t\t\t\tclassName=\"vendor-button\"\r\n\t\t\t\tcolor={selectedVendor === vendor ? \"primary\" : \"secondary\"}\r\n\t\t\t\tonClick={() => handleVendorClick(vendor)}\r\n\t\t\t>\r\n\t\t\t\t{vendor.title}\r\n\t\t\t</Button>\r\n\t\t));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Jumbotron>\r\n\t\t\t\t<span>Import to Veeqo</span>\r\n\t\t\t</Jumbotron>\r\n\t\t\t{showInitialView ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<h4>Choose data source</h4>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<VendorMenu />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<Spinner style={{ marginTop: \"120px\" }} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<FileUploadArea\r\n\t\t\t\t\t\t\tselectedVendor={selectedVendor}\r\n\t\t\t\t\t\t\thandleFileSubmit={getOrders}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t<OrdersView\r\n\t\t\t\t\torders={orders}\r\n\t\t\t\t\tfile={file}\r\n\t\t\t\t\tupdateAddress={updateAddress}\r\n\t\t\t\t\thandleImport={handleImport}\r\n\t\t\t\t\tsetInitialState={setInitialState}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ImportPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./UpdatePage.css\";\r\n\r\nimport { UPDATE_VENDORS } from \"../../config\";\r\nimport { updateSpreadsheet } from \"../../api/BackendApi\";\r\nimport Jumbotron from \"../../shared/Jumbotron\";\r\nimport Spinner from \"../../shared/Spinner\";\r\n\r\nimport {\r\n\tButton,\r\n\tDropdown,\r\n\tDropdownItem,\r\n\tDropdownToggle,\r\n\tDropdownMenu,\r\n} from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction UpdatePage() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [selectedVendor, setSelectedVendor] = useState(null);\r\n\tconst [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n\tconst toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n\tfunction handleUpdateClick() {\r\n\t\tsetLoading(true);\r\n\t\tupdateSpreadsheet(selectedVendor.name).then((orders) => {\r\n\t\t\tif (orders.length > 0) {\r\n\t\t\t\ttoast.dark(`Added ${orders.length} order(s)`);\r\n\t\t\t} else {\r\n\t\t\t\ttoast.dark(\"No orders added\");\r\n\t\t\t}\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction getDropDownText() {\r\n\t\tif (selectedVendor) {\r\n\t\t\treturn selectedVendor.title;\r\n\t\t} else {\r\n\t\t\treturn \"Select vendor\";\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Jumbotron>\r\n\t\t\t\t<span>Update Google Spreadsheet</span>\r\n\t\t\t</Jumbotron>\r\n\t\t\t<Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n\t\t\t\t<DropdownToggle caret className=\"vendor-dropdown\">\r\n\t\t\t\t\t{getDropDownText()}\r\n\t\t\t\t</DropdownToggle>\r\n\t\t\t\t<DropdownMenu>\r\n\t\t\t\t\t{UPDATE_VENDORS.map((vendor, index) => (\r\n\t\t\t\t\t\t<DropdownItem\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tonClick={() => setSelectedVendor(vendor)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{vendor.title}\r\n\t\t\t\t\t\t</DropdownItem>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</DropdownMenu>\r\n\t\t\t</Dropdown>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Spinner\r\n\t\t\t\t\tstyle={{ width: \"70px\", height: \"70px\", marginTop: \"5px\" }}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tdisabled={selectedVendor ? false : true}\r\n\t\t\t\t\tonClick={handleUpdateClick}\r\n\t\t\t\t>\r\n\t\t\t\t\tUpdate\r\n\t\t\t\t</Button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default UpdatePage;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./OrderWell.css\";\r\n\r\nimport { getOrderWell } from \"../../api/BackendApi\";\r\nimport Jumbotron from \"../../shared/Jumbotron\";\r\nimport Spinner from \"../../shared/Spinner\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nfunction OrderWell() {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [orders, setOrders] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetOrderWell().then((orders) => {\r\n\t\t\tsetOrders(orders);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tfunction handleCopyClick() {\r\n\t\tvar el = document.getElementById(\"orderwell-table\");\r\n\r\n\t\tvar body = document.body,\r\n\t\t\trange,\r\n\t\t\tsel;\r\n\t\tif (document.createRange && window.getSelection) {\r\n\t\t\trange = document.createRange();\r\n\t\t\tsel = window.getSelection();\r\n\t\t\tsel.removeAllRanges();\r\n\t\t\ttry {\r\n\t\t\t\trange.selectNodeContents(el);\r\n\t\t\t\tsel.addRange(range);\r\n\t\t\t} catch (e) {\r\n\t\t\t\trange.selectNode(el);\r\n\t\t\t\tsel.addRange(range);\r\n\t\t\t}\r\n\t\t} else if (body.createTextRange) {\r\n\t\t\trange = body.createTextRange();\r\n\t\t\trange.moveToElementText(el);\r\n\t\t\trange.select();\r\n\t\t}\r\n\t\tdocument.execCommand(\"Copy\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Jumbotron>\r\n\t\t\t\t<span>{\"Order Well for B&Q\"}</span>\r\n\t\t\t</Jumbotron>\r\n\t\t\t{loading ? (\r\n\t\t\t\t<Spinner style={{ marginTop: \"120px\" }} />\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Button onClick={handleCopyClick}>Copy</Button>\r\n\t\t\t\t\t<Table bordered striped id=\"orderwell-table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Date</th>\r\n\t\t\t\t\t\t\t\t<th>Order Number</th>\r\n\t\t\t\t\t\t\t\t<th>Items</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{orders.map((order, index) => (\r\n\t\t\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t\t\t<td>{order.date}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<a\r\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\t\t\t\t\t\thref={order.url}\r\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{order.id}\r\n\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t{order.items.map((item, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Fragment key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{index > 0 && <br />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</Table>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default OrderWell;\r\n","import React, { useState } from \"react\";\r\nimport \"./Turnover.css\";\r\n\r\nimport { getTurnover } from \"../../api/BackendApi\";\r\nimport Jumbotron from \"../../shared/Jumbotron\";\r\nimport Spinner from \"../../shared/Spinner\";\r\n\r\nimport moment from \"moment\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction Turnover() {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [turnover, setTurnover] = useState(null);\r\n\r\n\tlet currentMonth = moment().format(\"YYYY-MM\");\r\n\r\n\tfunction handleDateSelect(event) {\r\n\t\tconst { value } = event.target.elements.date;\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet monthYearString = moment(value).format(\"MM/YYYY\");\r\n\r\n\t\tsetTurnover(null);\r\n\t\tsetLoading(true);\r\n\t\tgetTurnover(monthYearString).then((json) => {\r\n\t\t\tsetTurnover(json);\r\n\t\t\tsetLoading(false);\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<Jumbotron>\r\n\t\t\t\t<span>{\"Turnover for B&Q\"}</span>\r\n\t\t\t</Jumbotron>\r\n\t\t\t<form onSubmit={handleDateSelect} className=\"date-form\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"month\"\r\n\t\t\t\t\tname=\"date\"\r\n\t\t\t\t\tmin=\"2017-04\"\r\n\t\t\t\t\tmax={currentMonth}\r\n\t\t\t\t\tdefaultValue={currentMonth}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button type=\"submit\" color=\"primary\">\r\n\t\t\t\t\tSearch\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t\t{loading && <Spinner style={{ marginTop: \"50px\" }} />}\r\n\t\t\t{turnover && (\r\n\t\t\t\t<div className=\"totals-wrapper\">\r\n\t\t\t\t\t<div className=\"info-card\">\r\n\t\t\t\t\t\t<label>Total excluding VAT</label>\r\n\t\t\t\t\t\t<span>£{turnover.total_ex_vat}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"info-card\">\r\n\t\t\t\t\t\t<label>Total including VAT</label>\r\n\t\t\t\t\t\t<span>£{turnover.total_with_vat}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Turnover;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport ImportPage from \"./components/import/ImportPage\";\r\nimport UpdatePage from \"./components/update/UpdatePage\";\r\nimport OrderWell from \"./components/orderwell/OrderWell\";\r\nimport Turnover from \"./components/turnover/Turnover\";\r\n//import PageNotFound from \"./components/PageNotFound\";\r\n\r\nlibrary.add(faUpload);\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ToastContainer hideProgressBar={true} autoClose={3000} />\r\n\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<Route exact path=\"/\" component={Homepage} />\r\n\t\t\t\t\t<Route path=\"/update\" component={UpdatePage} />\r\n\t\t\t\t\t<Route path=\"/import/\" component={ImportPage} />\r\n\t\t\t\t\t<Route path=\"/turnover\" component={Turnover} />\r\n\t\t\t\t\t<Route path=\"/orderwell/\" component={OrderWell} />\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}