{"version":3,"sources":["components/Navbar.js","components/shared/Jumbotron.js","components/Homepage.js","config.js","api/ApiUtils.js","components/import/OrdersTable.js","components/import/ImportPageModal.js","components/import/OrdersView.js","api/BackendApi.js","components/import/FileUploadArea.js","components/shared/Spinner.js","components/import/ImportPage.js","components/update/UpdatePage.js","components/orderwell/OrderWell.js","components/turnover/Turnover.js","App.js","index.js"],"names":["Navbar","useState","isOpen","setIsOpen","color","dark","expand","NavbarBrand","href","className","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","Jumbotron","children","Homepage","UPDATE_VENDORS","name","title","IMPORT_VENDORS","requires_file","file_type","handleResponse","response","ok","json","Error","OrdersTable","orders","handleEditClick","handleCheckboxClick","Table","bordered","striped","responsive","map","order","index","customer","deliver_to_attributes","key","Input","type","id","defaultChecked","onChange","first_name","last_name","address1","city","state","zip","country","Button","size","ImportPageModal","header","body","toggle","modalType","addresses","handleAddressSelection","Form","onSubmit","address","summaryline","Modal","ModalHeader","ModalBody","OrdersView","file","updateAddress","handleImport","setInitialState","activeOrderIndex","setActiveOrderIndex","selectedIndexes","setSelectedIndexes","modalOpen","setModalOpen","setAddresses","useEffect","x","idx","length","event","target","checked","parseInt","filter","postcode","url","fetch","method","then","catch","error","console","getPostcodeAddresses","selectedOrders","includes","value","elements","preventDefault","find","FileUploadArea","selectedVendor","handleFileSubmit","onDrop","useCallback","acceptedFiles","useDropzone","multiple","accept","getRootProps","getInputProps","icon","Spinner","style","ImportPage","setSelectedVendor","setOrders","setFile","loading","setLoading","showInitialView","setShowInitialView","getOrders","vendorName","vendor","options","formData","FormData","append","getOrdersJson","toast","VendorMenu","handleVendorClick","marginTop","premise","street","posttown","county","tempOrders","headers","Headers","JSON","stringify","importOrders","UpdatePage","dropdownOpen","setDropdownOpen","Dropdown","prevState","DropdownToggle","caret","DropdownMenu","DropdownItem","width","height","disabled","updateSpreadsheet","OrderWell","getOrderWell","range","sel","el","document","getElementById","createRange","window","getSelection","removeAllRanges","selectNodeContents","addRange","e","selectNode","createTextRange","moveToElementText","select","execCommand","date","rel","items","item","Turnover","turnover","setTurnover","currentMonth","moment","format","monthYearString","getTurnover","min","max","defaultValue","total_ex_vat","total_with_vat","library","add","faUpload","App","hideProgressBar","autoClose","exact","path","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.5b9acb23.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Navbar as NavigationBar,\r\n  Collapse,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavLink,\r\n} from \"reactstrap\";\r\n\r\nfunction Navbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <NavigationBar color=\"dark\" dark expand=\"md\">\r\n      <NavbarBrand href=\"/\">\r\n        <img className=\"logo\" src=\"/images/csc-logo.png\" alt=\"logo\" />\r\n      </NavbarBrand>\r\n      <NavbarBrand href=\"/\">CSC Services</NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n          <NavLink href=\"/update\">Update</NavLink>\r\n          <NavLink href=\"/import\">Import</NavLink>\r\n          <NavLink href=\"/turnover\">Turnover</NavLink>\r\n          <NavLink href=\"/orderwell\">Order Well</NavLink>\r\n        </Nav>\r\n      </Collapse>\r\n    </NavigationBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n\treturn <div className=\"jumbotron\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nimport Jumbotron from \"./shared/Jumbotron\";\r\n\r\nfunction Homepage() {\r\n  return (\r\n    <Jumbotron>\r\n      <span>Welcome to Canadian Spa Services</span>\r\n    </Jumbotron>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","export const API_BASE_URL =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"/api\"\r\n\t\t: \"http://localhost:5000/api\";\r\n\r\nexport const UPDATE_VENDORS = [\r\n\t{ name: \"bandq\", title: \"B&Q\" },\r\n\t{ name: \"homebase\", title: \"Homebase\" },\r\n\t{ name: \"jtf\", title: \"JTF\" },\r\n\t{ name: \"wayfair\", title: \"Wayfair\" },\r\n\t{ name: \"range\", title: \"The Range\" },\r\n\t{ name: \"travisperkins\", title: \"Travis Perkins\" },\r\n\t{ name: \"robert_dyas\", title: \"Robert Dyas\" },\r\n\t{ name: \"hornbach\", title: \"Hornbach\" },\r\n\t{ name: \"shop_direct\", title: \"Shop Direct\" },\r\n];\r\n\r\nexport const IMPORT_VENDORS = [\r\n\t{\r\n\t\tname: \"bandq\",\r\n\t\ttitle: \"B&Q CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"argos\",\r\n\t\ttitle: \"Argos CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"range\",\r\n\t\ttitle: \"The Range\",\r\n\t\trequires_file: false,\r\n\t\tfile_type: null,\r\n\t},\r\n\t{\r\n\t\tname: \"homebase\",\r\n\t\ttitle: \"Homebase XML\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".xml\",\r\n\t},\r\n\t{\r\n\t\tname: \"wayfair\",\r\n\t\ttitle: \"Wayfair CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"robert_dyas\",\r\n\t\ttitle: \"Robert Dyas CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"shop_direct\",\r\n\t\ttitle: \"Shop Direct TXT\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".txt\",\r\n\t},\r\n\t{\r\n\t\tname: \"globus\",\r\n\t\ttitle: \"Globus XML\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".xml\",\r\n\t},\r\n\t{\r\n\t\tname: \"hornbach\",\r\n\t\ttitle: \"Hornbach PDF\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".pdf\",\r\n\t},\r\n];\r\n","export function handleResponse(response) {\r\n\tif (response.ok) {\r\n\t\treturn response.json();\r\n\t} else {\r\n\t\tthrow new Error(\"Bad response.\");\r\n\t}\r\n}\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Table, Button, Input } from \"reactstrap\";\r\n\r\nfunction OrdersTable({ orders, handleEditClick, handleCheckboxClick }) {\r\n\treturn (\r\n\t\t<Table bordered striped responsive>\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t<th>Address 1</th>\r\n\t\t\t\t\t<th>City</th>\r\n\t\t\t\t\t<th>County</th>\r\n\t\t\t\t\t<th>Postcode</th>\r\n\t\t\t\t\t<th>Country</th>\r\n\t\t\t\t\t<th></th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t\t{orders.map((order, index) => {\r\n\t\t\t\t\tlet customer = order.deliver_to_attributes;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<tr key={index}>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\tdefaultChecked=\"true\"\r\n\t\t\t\t\t\t\t\t\tonChange={handleCheckboxClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>{customer.first_name}</td>\r\n\t\t\t\t\t\t\t<td>{customer.last_name}</td>\r\n\t\t\t\t\t\t\t<td>{customer.address1}</td>\r\n\t\t\t\t\t\t\t<td>{customer.city}</td>\r\n\t\t\t\t\t\t\t<td>{customer.state}</td>\r\n\t\t\t\t\t\t\t<td>{customer.zip}</td>\r\n\t\t\t\t\t\t\t<td>{customer.country}</td>\r\n\t\t\t\t\t\t\t<th>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t\tid={index}\r\n\t\t\t\t\t\t\t\t\tonClick={handleEditClick}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEdit Address\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</tbody>\r\n\t\t</Table>\r\n\t);\r\n}\r\n\r\nexport default OrdersTable;\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, Input, Button, Form } from \"reactstrap\";\r\n\r\nfunction ImportPageModal({\r\n\tisOpen,\r\n\ttoggle,\r\n\tmodalType,\r\n\taddresses,\r\n\thandleAddressSelection,\r\n}) {\r\n\tlet header, body;\r\n\tif (modalType === \"editAddress\") {\r\n\t\theader = \"Select address\";\r\n\t\tbody = (\r\n\t\t\t<Form onSubmit={handleAddressSelection}>\r\n\t\t\t\t<Input name=\"address\" type=\"select\">\r\n\t\t\t\t\t{addresses.map((address, index) => (\r\n\t\t\t\t\t\t<option key={index}>{address.summaryline}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Input>\r\n\t\t\t\t<div className=\"button-parent\">\r\n\t\t\t\t\t<Button color=\"danger\" onClick={toggle}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Modal isOpen={isOpen}>\r\n\t\t\t<ModalHeader toggle={toggle}>{header}</ModalHeader>\r\n\t\t\t<ModalBody>{body}</ModalBody>\r\n\t\t</Modal>\r\n\t);\r\n}\r\n\r\nexport default ImportPageModal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { getPostcodeAddresses } from \"../../api/BackendApi\";\r\n\r\nimport OrdersTable from \"./OrdersTable\";\r\nimport ImportPageModal from \"./ImportPageModal\";\r\n\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction OrdersView({\r\n\torders,\r\n\tfile,\r\n\tupdateAddress,\r\n\thandleImport,\r\n\tsetInitialState,\r\n}) {\r\n\tconst [activeOrderIndex, setActiveOrderIndex] = useState([]);\r\n\tconst [selectedIndexes, setSelectedIndexes] = useState([]);\r\n\tconst [modalOpen, setModalOpen] = useState(false);\r\n\tconst [addresses, setAddresses] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetSelectedIndexes(orders.map((x, idx) => idx));\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\tconst toggle = () => setModalOpen(!modalOpen);\r\n\r\n\tfunction handleCheckboxClick(event) {\r\n\t\tconst { id, checked } = event.target;\r\n\t\tlet index = parseInt(id);\r\n\t\tif (checked) {\r\n\t\t\tsetSelectedIndexes([...selectedIndexes, index]);\r\n\t\t} else {\r\n\t\t\tsetSelectedIndexes(selectedIndexes.filter((idx) => idx !== index));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleAddressSelection(event) {\r\n\t\tconst { value } = event.target.elements.address;\r\n\r\n\t\tevent.preventDefault();\r\n\t\tsetModalOpen(false);\r\n\r\n\t\t// Find selected address from dropdown\r\n\t\tconst address = addresses.find(\r\n\t\t\t(address) => address.summaryline === value\r\n\t\t);\r\n\t\tupdateAddress(activeOrderIndex, address);\r\n\t}\r\n\r\n\tfunction handleEditAddressClick(event) {\r\n\t\tconst { id } = event.target;\r\n\t\tlet index = parseInt(id);\r\n\r\n\t\tsetActiveOrderIndex(index);\r\n\r\n\t\tlet postcode = orders[index].deliver_to_attributes.zip;\r\n\t\tgetPostcodeAddresses(postcode).then((json) => {\r\n\t\t\tsetAddresses(json);\r\n\t\t\tsetModalOpen(true);\r\n\t\t});\r\n\t}\r\n\r\n\tfunction handleImportClick() {\r\n\t\tlet selectedOrders = orders.filter((orders, idx) =>\r\n\t\t\tselectedIndexes.includes(idx)\r\n\t\t);\r\n\r\n\t\thandleImport(selectedOrders);\r\n\t}\r\n\r\n\treturn orders.length === 0 ? (\r\n\t\t<>\r\n\t\t\t<h5>No orders found.</h5>\r\n\t\t\t<Button color=\"danger\" onClick={setInitialState}>\r\n\t\t\t\tCancel\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t) : (\r\n\t\t<>\r\n\t\t\t{file && <h5>File: {file.name}</h5>}\r\n\t\t\t<OrdersTable\r\n\t\t\t\torders={orders}\r\n\t\t\t\thandleCheckboxClick={handleCheckboxClick}\r\n\t\t\t\thandleEditClick={handleEditAddressClick}\r\n\t\t\t/>\r\n\t\t\t<div className=\"button-parent\">\r\n\t\t\t\t<Button color=\"danger\" onClick={setInitialState}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button color=\"primary\" onClick={handleImportClick}>\r\n\t\t\t\t\tImport\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t<ImportPageModal\r\n\t\t\t\tisOpen={modalOpen}\r\n\t\t\t\ttoggle={toggle}\r\n\t\t\t\tmodalType={\"editAddress\"}\r\n\t\t\t\taddresses={addresses}\r\n\t\t\t\thandleAddressSelection={handleAddressSelection}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default OrdersView;\r\n","import { handleResponse } from \"./ApiUtils\";\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nexport function getOrdersJson(vendor, file) {\r\n  let url = `${API_BASE_URL}/import/convert/${vendor}`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n  };\r\n\r\n  if (file) {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    options.body = formData;\r\n  }\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function importOrders(orders) {\r\n  let url = `${API_BASE_URL}/import/orders`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n    headers: new Headers({\r\n      \"content-type\": \"application/json\",\r\n    }),\r\n    body: JSON.stringify(orders),\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getPostcodeAddresses(postcode) {\r\n  let url = `${API_BASE_URL}/postcoder?postcode=${postcode}`;\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n  })\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function updateSpreadsheet(vendor) {\r\n  let url = `${API_BASE_URL}/update/${vendor}`;\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n  })\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getTurnover(date) {\r\n  let url = `${API_BASE_URL}/turnover?date=${date}`;\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n  })\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getOrderWell() {\r\n  let url = `${API_BASE_URL}/orderwell`;\r\n\r\n  return fetch(url, {\r\n    method: \"GET\",\r\n  })\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport \"./FileUploadArea.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction FileUploadArea({ selectedVendor, handleFileSubmit }) {\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tif (acceptedFiles[0]) {\r\n\t\t\t\thandleFileSubmit(selectedVendor.name, acceptedFiles[0]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedVendor, handleFileSubmit]\r\n\t);\r\n\r\n\tconst { getRootProps, getInputProps } = useDropzone({\r\n\t\tonDrop,\r\n\t\tmultiple: false,\r\n\t\taccept: selectedVendor.file_type,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} className=\"dropzone-container\">\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<div className=\"dropzone-content\">\r\n\t\t\t\t<FontAwesomeIcon icon=\"upload\" />\r\n\t\t\t\t<span>Click to upload file ({selectedVendor.file_type})</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FileUploadArea;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { Spinner as ReactStrapSpinner } from \"reactstrap\";\r\n\r\nfunction Spinner({ style }) {\r\n\treturn <ReactStrapSpinner color=\"dark\" className=\"spinner\" style={style} />;\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { IMPORT_VENDORS } from \"../../config\";\r\nimport { getOrdersJson, importOrders } from \"../../api/BackendApi\";\r\n\r\nimport OrdersView from \"./OrdersView\";\r\nimport FileUploadArea from \"./FileUploadArea\";\r\nimport Spinner from \"../shared/Spinner\";\r\nimport Jumbotron from \"../shared/Jumbotron\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction ImportPage() {\r\n  const [selectedVendor, setSelectedVendor] = useState(IMPORT_VENDORS[0]);\r\n  const [orders, setOrders] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showInitialView, setShowInitialView] = useState(true);\r\n\r\n  function handleVendorClick(vendor) {\r\n    setSelectedVendor(vendor);\r\n\r\n    if (!vendor.requires_file) {\r\n      getOrders(vendor.name);\r\n    }\r\n  }\r\n\r\n  function getOrders(vendorName, file) {\r\n    setLoading(true);\r\n    getOrdersJson(vendorName, file).then((json) => {\r\n      if (json.error) {\r\n        setLoading(false);\r\n        toast.dark(\r\n          \"Error getting orders, ensure you are uploading the correct file.\"\r\n        );\r\n      } else {\r\n        setOrders(json);\r\n        setFile(file);\r\n        setLoading(false);\r\n        setShowInitialView(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateAddress(index, address) {\r\n    const { premise, street, posttown, county, postcode } = address;\r\n\r\n    let tempOrders = orders.map((order, idx) => {\r\n      if (idx === index) {\r\n        order.deliver_to_attributes.address1 = premise + \" \" + street;\r\n        order.deliver_to_attributes.city = posttown;\r\n        order.deliver_to_attributes.state = county;\r\n        order.deliver_to_attributes.zip = postcode;\r\n      }\r\n      return order;\r\n    });\r\n    setOrders(tempOrders);\r\n  }\r\n\r\n  function handleImport(orders) {\r\n    toast.dark(\"Importing...\");\r\n\r\n    importOrders(orders).then((json) => {\r\n      toast.dark(`Imported ${json.length} orders`);\r\n      setInitialState();\r\n    });\r\n  }\r\n\r\n  function setInitialState() {\r\n    setSelectedVendor(IMPORT_VENDORS[0]);\r\n    setOrders([]);\r\n    setShowInitialView(true);\r\n  }\r\n\r\n  const VendorMenu = () => {\r\n    return IMPORT_VENDORS.map((vendor, index) => (\r\n      <Button\r\n        key={index}\r\n        className=\"vendor-button\"\r\n        color={selectedVendor === vendor ? \"primary\" : \"secondary\"}\r\n        onClick={() => handleVendorClick(vendor)}\r\n      >\r\n        {vendor.title}\r\n      </Button>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>\r\n        <span>Import to Veeqo</span>\r\n      </Jumbotron>\r\n      {showInitialView ? (\r\n        <>\r\n          <h4>Choose data source</h4>\r\n          <div>\r\n            <VendorMenu />\r\n          </div>\r\n          {loading ? (\r\n            <Spinner style={{ marginTop: \"120px\" }} />\r\n          ) : (\r\n            <FileUploadArea\r\n              selectedVendor={selectedVendor}\r\n              handleFileSubmit={getOrders}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <OrdersView\r\n          orders={orders}\r\n          file={file}\r\n          updateAddress={updateAddress}\r\n          handleImport={handleImport}\r\n          setInitialState={setInitialState}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./UpdatePage.css\";\r\n\r\nimport { UPDATE_VENDORS } from \"../../config\";\r\nimport { updateSpreadsheet } from \"../../api/BackendApi\";\r\nimport Jumbotron from \"../shared/Jumbotron\";\r\nimport Spinner from \"../shared/Spinner\";\r\n\r\nimport {\r\n  Button,\r\n  Dropdown,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction UpdatePage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedVendor, setSelectedVendor] = useState(null);\r\n  const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => setDropdownOpen((prevState) => !prevState);\r\n\r\n  function handleUpdateClick() {\r\n    setLoading(true);\r\n    updateSpreadsheet(selectedVendor.name).then((orders) => {\r\n      if (orders.length > 0) {\r\n        toast.dark(`Added ${orders.length} order(s)`);\r\n      } else {\r\n        toast.dark(\"No orders added\");\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function getDropDownText() {\r\n    if (selectedVendor) {\r\n      return selectedVendor.title;\r\n    } else {\r\n      return \"Select vendor\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>\r\n        <span>Update Google Spreadsheet</span>\r\n      </Jumbotron>\r\n      <Dropdown isOpen={dropdownOpen} toggle={toggle}>\r\n        <DropdownToggle caret className=\"vendor-dropdown\">\r\n          {getDropDownText()}\r\n        </DropdownToggle>\r\n        <DropdownMenu>\r\n          {UPDATE_VENDORS.map((vendor, index) => (\r\n            <DropdownItem key={index} onClick={() => setSelectedVendor(vendor)}>\r\n              {vendor.title}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownMenu>\r\n      </Dropdown>\r\n      {loading ? (\r\n        <Spinner style={{ width: \"70px\", height: \"70px\", marginTop: \"5px\" }} />\r\n      ) : (\r\n        <Button\r\n          color=\"primary\"\r\n          disabled={selectedVendor ? false : true}\r\n          onClick={handleUpdateClick}\r\n        >\r\n          Update\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePage;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport \"./OrderWell.css\";\r\n\r\nimport { getOrderWell } from \"../../api/BackendApi\";\r\nimport Jumbotron from \"../shared/Jumbotron\";\r\nimport Spinner from \"../shared/Spinner\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nfunction OrderWell() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [orders, setOrders] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getOrderWell().then((orders) => {\r\n      setOrders(orders);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  function handleCopyClick() {\r\n    var el = document.getElementById(\"orderwell-table\");\r\n\r\n    var body = document.body,\r\n      range,\r\n      sel;\r\n    if (document.createRange && window.getSelection) {\r\n      range = document.createRange();\r\n      sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      try {\r\n        range.selectNodeContents(el);\r\n        sel.addRange(range);\r\n      } catch (e) {\r\n        range.selectNode(el);\r\n        sel.addRange(range);\r\n      }\r\n    } else if (body.createTextRange) {\r\n      range = body.createTextRange();\r\n      range.moveToElementText(el);\r\n      range.select();\r\n    }\r\n    document.execCommand(\"Copy\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>\r\n        <span>{\"Order Well for B&Q\"}</span>\r\n      </Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ marginTop: \"120px\" }} />\r\n      ) : (\r\n        <>\r\n          <Button onClick={handleCopyClick}>Copy</Button>\r\n          <Table bordered striped id=\"orderwell-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Date</th>\r\n                <th>Order Number</th>\r\n                <th>Items</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order, index) => (\r\n                <tr key={index}>\r\n                  <td>{order.date}</td>\r\n                  <td>\r\n                    <a\r\n                      target=\"_blank\"\r\n                      href={order.url}\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {order.id}\r\n                    </a>\r\n                  </td>\r\n                  <td>\r\n                    {order.items.map((item, index) => (\r\n                      <Fragment key={index}>\r\n                        {index > 0 && <br />}\r\n                        {item}\r\n                      </Fragment>\r\n                    ))}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderWell;\r\n","import React, { useState } from \"react\";\r\nimport \"./Turnover.css\";\r\n\r\nimport { getTurnover } from \"../../api/BackendApi\";\r\nimport Jumbotron from \"../shared/Jumbotron\";\r\nimport Spinner from \"../shared/Spinner\";\r\n\r\nimport moment from \"moment\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction Turnover() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [turnover, setTurnover] = useState(null);\r\n\r\n  let currentMonth = moment().format(\"YYYY-MM\");\r\n\r\n  function handleDateSelect(event) {\r\n    event.preventDefault();\r\n\r\n    const { value } = event.target.elements.date;\r\n\r\n    let monthYearString = moment(value).format(\"MM/YYYY\");\r\n\r\n    setTurnover(null);\r\n    setLoading(true);\r\n    getTurnover(monthYearString).then((json) => {\r\n      setTurnover(json);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>\r\n        <span>{\"Turnover for B&Q\"}</span>\r\n      </Jumbotron>\r\n      <form onSubmit={handleDateSelect} className=\"date-form\">\r\n        <input\r\n          type=\"month\"\r\n          name=\"date\"\r\n          min=\"2017-04\"\r\n          max={currentMonth}\r\n          defaultValue={currentMonth}\r\n        />\r\n        <Button type=\"submit\" color=\"primary\">\r\n          Search\r\n        </Button>\r\n      </form>\r\n      {loading && <Spinner style={{ marginTop: \"50px\" }} />}\r\n      {turnover && (\r\n        <div className=\"totals-wrapper\">\r\n          <div className=\"info-card\">\r\n            <label>Total excluding VAT</label>\r\n            <span>£{turnover.total_ex_vat}</span>\r\n          </div>\r\n          <div className=\"info-card\">\r\n            <label>Total including VAT</label>\r\n            <span>£{turnover.total_with_vat}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Turnover;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { faUpload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport ImportPage from \"./components/import/ImportPage\";\r\nimport UpdatePage from \"./components/update/UpdatePage\";\r\nimport OrderWell from \"./components/orderwell/OrderWell\";\r\nimport Turnover from \"./components/turnover/Turnover\";\r\n//import PageNotFound from \"./components/PageNotFound\";\r\n\r\nlibrary.add(faUpload);\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<Router>\r\n\t\t\t\t<Navbar />\r\n\t\t\t\t<ToastContainer hideProgressBar={true} autoClose={3000} />\r\n\r\n\t\t\t\t<div className=\"wrapper\">\r\n\t\t\t\t\t<Route exact path=\"/\" component={Homepage} />\r\n\t\t\t\t\t<Route path=\"/update\" component={UpdatePage} />\r\n\t\t\t\t\t<Route path=\"/import/\" component={ImportPage} />\r\n\t\t\t\t\t<Route path=\"/turnover\" component={Turnover} />\r\n\t\t\t\t\t<Route path=\"/orderwell/\" component={OrderWell} />\r\n\t\t\t\t</div>\r\n\t\t\t</Router>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}