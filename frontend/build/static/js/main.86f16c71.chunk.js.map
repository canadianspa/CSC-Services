{"version":3,"sources":["components/Navbar.js","components/shared/CardComponent.js","components/shared/HeaderComponent.js","components/shared/JumbotronComponent.js","components/shared/SelectComponents.js","components/shared/SelectFormComponent.js","components/shared/SpinnerComponent.js","components/Shared.js","components/Homepage.js","config.js","api/ApiUtils.js","api/BackendApi.js","components/utils.js","components/import/OrdersTable.js","components/import/OrdersView.js","components/import/FileUploadArea.js","components/import/ImportPageModal.js","components/import/ImportPage.js","components/update/UpdatePage.js","components/bandq/turnover/TurnoverPage.js","components/bandq/orderwell/OrderWellTable.js","components/bandq/orderwell/OrderWellPage.js","components/bandq/comparison/ComparisonPage.js","components/shipping/create/InitialView.js","components/shipping/create/ItemsTable.js","components/shipping/create/ItemsView.js","components/shipping/create/ShippingCreatePage.js","components/shipping/items/Item.js","components/shipping/items/ItemForm.js","components/shipping/items/ShippingItemsPage.js","components/deliveries/DeliveriesPage.js","components/PageNotFound.js","App.js","index.js"],"names":["Navbar","useState","isOpen","setIsOpen","color","dark","expand","NavbarBrand","href","className","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Card","header","text","description","Header","children","Jumbotron","Select","options","onChange","useObjects","objectTitleKey","multiple","name","style","Input","type","event","target","value","option","find","_option","map","index","key","SelectForm","onSubmit","optionKey","inputStyle","Form","preventDefault","elements","Spinner","CardComponent","HeaderComponent","JumbotronComponent","SelectComponents","SelectFormComponent","Homepage","API_BASE_URL","UPDATE_VENDORS","title","IMPORT_VENDORS","requires_file","file_type","handleResponse","response","ok","json","Error","getTurnover","params","start","end","url","fetch","then","catch","error","console","getOrderWell","getItems","getCarriers","reducer","state","newState","OrdersTable","orders","handleEditClick","handleCheckboxClick","Table","bordered","striped","responsive","size","order","customer","deliver_to_attributes","id","defaultChecked","first_name","last_name","address1","city","zip","country","Button","OrdersView","file","handleEditAddressClick","handleImportClick","setInitialState","length","FileUploadArea","selectedVendor","handleFileSubmit","onDrop","useCallback","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","icon","ImportPageModal","body","toggle","modalType","addresses","handleUpdateAddress","Modal","ModalHeader","ModalBody","intialState","activeOrderIndex","ImportPage","loading","setLoading","setFile","setOrders","setAddresses","modalOpen","setModalOpen","showInitialView","setShowInitialView","selectedIndexes","setSelectedIndexes","useReducer","pageVariables","setPageVariables","getOrders","vendorName","vendor","method","formData","FormData","append","api","toast","x","idx","marginTop","parseInt","postcode","checked","filter","headers","JSON","stringify","includes","address","premise","street","posttown","county","tempOrders","UpdatePage","initialVendor","setSelectedVendor","width","height","TurnoverPage","turnover","setTurnover","currentMonth","moment","format","date","startOf","endOf","min","max","total_ex_vat","total_with_vat","OrderWellTable","rel","items","item","OrderWell","a","useEffect","fetchData","range","sel","el","document","getElementById","createRange","window","getSelection","removeAllRanges","selectNodeContents","addRange","e","selectNode","createTextRange","moveToElementText","select","execCommand","intialDatesState","startDate","endDate","focusedInput","ComparisonPage","dates","setDates","sales","setSales","previousSales","setPreviousSales","previousParams","clone","subtract","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","day","isBefore","isAfter","displayFormat","IntialView","carriers","formState","onFormChange","updateFormState","carrier","orderUrl","InputGroup","InputGroupAddon","addonType","InputGroupText","placeholder","accounts","ItemsTable","handleDeleteItem","weight","quantity","ItemsView","updatedItems","splice","total","forEach","calculateWeight","newItem","findIndex","_id","push","intialFormState","account","ShippingCreatePage","initialView","setInitialView","setFormState","setCarriers","setItems","data","updateView","InitialView","shipment","reponse","message","Item","ItemForm","FormGroup","Label","ShippingItemsPage","onButtonClick","$oid","validateForm","updateItems","status","DeliveriesPage","days","i","renderDays","PageNotFound","library","add","faUpload","faPlus","faPencilAlt","faTrashAlt","faTimes","App","hideProgressBar","autoClose","exact","path","component","OrderWellPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.86f16c71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Navbar as NavigationBar,\r\n  Collapse,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nfunction Navbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <NavigationBar color=\"dark\" dark expand=\"md\">\r\n      <NavbarBrand href=\"/\">\r\n        <img className=\"logo\" src=\"/images/csc-logo.png\" alt=\"logo\" />\r\n      </NavbarBrand>\r\n      <NavbarBrand href=\"/\">CSC Services</NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n          <NavLink href=\"/update\">Update</NavLink>\r\n          <NavLink href=\"/import\">Import</NavLink>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggle nav caret>\r\n              {\"B & Q\"}\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem>\r\n                <NavLink href=\"/bandq/turnover\">Turnover</NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink href=\"/bandq/orderwell\">Order Well</NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink href=\"/bandq/comparison\">Sales Comparison</NavLink>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggle nav caret>\r\n              Shipping\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem>\r\n                <NavLink href=\"/shipping/create\">Create</NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink href=\"/shipping/items\">Items</NavLink>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n          <NavLink href=\"/deliveries\">Deliveries</NavLink>\r\n        </Nav>\r\n      </Collapse>\r\n    </NavigationBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Card({ header, text, description }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <label>{header}</label>\r\n      <span>{text}</span>\r\n      {description && <p>{description}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nfunction Header({ children }) {\r\n  return <div className=\"header\">{children}</div>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return <div className=\"jumbotron\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { Input } from \"reactstrap\";\r\n\r\nfunction Select({\r\n  options,\r\n  onChange,\r\n  useObjects,\r\n  objectTitleKey,\r\n  multiple,\r\n  name,\r\n  style,\r\n}) {\r\n  function _onChange(event) {\r\n    if (useObjects) {\r\n      const { value, name } = event.target;\r\n\r\n      var option = options.find((_option) => _option[objectTitleKey] === value);\r\n      onChange(option, name);\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      type=\"select\"\r\n      className=\"select\"\r\n      name={name}\r\n      style={style}\r\n      multiple={multiple ? true : false}\r\n      onChange={_onChange}\r\n    >\r\n      {options.map((option, index) => (\r\n        <option key={index}>{useObjects ? option[objectTitleKey] : option}</option>\r\n      ))}\r\n    </Input>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nimport { Form, Input } from \"reactstrap\";\r\n\r\nfunction SelectForm({\r\n  options,\r\n  onSubmit,\r\n  useObjects,\r\n  optionKey,\r\n  children,\r\n  inputStyle,\r\n}) {\r\n  function _onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { value } = event.target.elements.option;\r\n\r\n    if (!value) {\r\n      onSubmit(options[0]);\r\n    } else if (useObjects) {\r\n      var option = options.find((_option) => _option[optionKey] === value);\r\n      onSubmit(option);\r\n    } else {\r\n      onSubmit(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={_onSubmit}>\r\n      <Input name=\"option\" type=\"select\" multiple style={inputStyle}>\r\n        {options.map((option, index) => {\r\n          var value = useObjects ? option[optionKey] : option;\r\n          return (\r\n            <option key={index} value={value}>\r\n              {value}\r\n            </option>\r\n          );\r\n        })}\r\n      </Input>\r\n      {children}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SelectForm;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { Spinner as ReactStrapSpinner } from \"reactstrap\";\r\n\r\nfunction Spinner({ style }) {\r\n\treturn <ReactStrapSpinner color=\"dark\" className=\"spinner\" style={style} />;\r\n}\r\n\r\nexport default Spinner;\r\n","import CardComponent from \"./shared/CardComponent\";\r\nimport HeaderComponent from \"./shared/HeaderComponent\";\r\nimport JumbotronComponent from \"./shared/JumbotronComponent\";\r\nimport SelectComponents from \"./shared/SelectComponents\";\r\nimport SelectFormComponent from \"./shared/SelectFormComponent\";\r\nimport SpinnerComponent from \"./shared/SpinnerComponent\";\r\n\r\nexport const Card = CardComponent;\r\nexport const Header = HeaderComponent;\r\nexport const Jumbotron = JumbotronComponent;\r\nexport const Select = SelectComponents;\r\nexport const SelectForm = SelectFormComponent;\r\nexport const Spinner = SpinnerComponent;\r\n","import React from \"react\";\r\n\r\nimport { Jumbotron } from \"./Shared\";\r\n\r\nfunction Homepage() {\r\n  return <Jumbotron>Welcome to Canadian Spa Services</Jumbotron>;\r\n}\r\n\r\nexport default Homepage;\r\n","export const API_BASE_URL =\r\n\tprocess.env.NODE_ENV === \"production\"\r\n\t\t? \"/api\"\r\n\t\t: \"http://localhost:5000/api\";\r\n\r\nexport const UPDATE_VENDORS = [\r\n\t{ name: \"bandq\", title: \"B&Q\" },\r\n\t{ name: \"homebase\", title: \"Homebase\" },\r\n\t{ name: \"jtf\", title: \"JTF\" },\r\n\t{ name: \"wayfair\", title: \"Wayfair\" },\r\n\t{ name: \"range\", title: \"The Range\" },\r\n\t{ name: \"travisperkins\", title: \"Travis Perkins\" },\r\n\t{ name: \"robert_dyas\", title: \"Robert Dyas\" },\r\n\t{ name: \"hornbach\", title: \"Hornbach\" },\r\n\t{ name: \"shop_direct\", title: \"Shop Direct\" },\r\n];\r\n\r\nexport const IMPORT_VENDORS = [\r\n\t{\r\n\t\tname: \"bandq\",\r\n\t\ttitle: \"B&Q CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"argos\",\r\n\t\ttitle: \"Argos CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"range\",\r\n\t\ttitle: \"The Range\",\r\n\t\trequires_file: false,\r\n\t\tfile_type: null,\r\n\t},\r\n\t{\r\n\t\tname: \"homebase\",\r\n\t\ttitle: \"Homebase XML\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".xml\",\r\n\t},\r\n\t{\r\n\t\tname: \"wayfair\",\r\n\t\ttitle: \"Wayfair CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"robert_dyas\",\r\n\t\ttitle: \"Robert Dyas CSV\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".csv\",\r\n\t},\r\n\t{\r\n\t\tname: \"shop_direct\",\r\n\t\ttitle: \"Shop Direct TXT\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".txt\",\r\n\t},\r\n\t{\r\n\t\tname: \"globus\",\r\n\t\ttitle: \"Globus XML\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".xml\",\r\n\t},\r\n\t{\r\n\t\tname: \"hornbach\",\r\n\t\ttitle: \"Hornbach PDF\",\r\n\t\trequires_file: true,\r\n\t\tfile_type: \".pdf\",\r\n\t},\r\n];\r\n","export function handleResponse(response) {\r\n  if (response.ok) {\r\n    return response.json();\r\n  } else {\r\n    throw new Error(\"Bad response.\");\r\n  }\r\n}\r\n","import { handleResponse } from \"./ApiUtils\";\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nexport function convertFile(params) {\r\n  const { vendor, file } = params;\r\n\r\n  let url = `${API_BASE_URL}/import/convert/${vendor}`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n  };\r\n\r\n  if (file) {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    options.body = formData;\r\n  }\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function importOrders(params) {\r\n  const { orders } = params;\r\n\r\n  let url = `${API_BASE_URL}/import/orders`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(orders),\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getPostcodeAddresses(params) {\r\n  const { postcode } = params;\r\n\r\n  let url = `${API_BASE_URL}/postcoder?postcode=${postcode}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function updateSpreadsheet(params) {\r\n  const { vendor } = params;\r\n\r\n  let url = `${API_BASE_URL}/update/${vendor}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getTurnover(params) {\r\n  const { start, end } = params;\r\n\r\n  let url = `${API_BASE_URL}/bandq/turnover?start=${start}&end=${end}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getOrderWell() {\r\n  let url = `${API_BASE_URL}/bandq/orderwell`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getItems() {\r\n  let url = `${API_BASE_URL}/shipping/items`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function updateItem(params) {\r\n  const { id, item } = params;\r\n\r\n  let url = `${API_BASE_URL}/shipping/items`;\r\n\r\n  if (id) {\r\n    url += `?id=${id}`;\r\n  }\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(item),\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function deleteItem(params) {\r\n  const { id } = params;\r\n\r\n  let url = `${API_BASE_URL}/shipping/items?id=${id}`;\r\n\r\n  let options = {\r\n    method: \"DELETE\",\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getCarriers() {\r\n  let url = `${API_BASE_URL}/shipping/carriers`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function createShipment(params) {\r\n  const { shipment } = params;\r\n\r\n  let url = `${API_BASE_URL}/shipping/create/`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(shipment),\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n","export const reducer = (state, newState) => ({ ...state, ...newState });\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Table, Button, Input } from \"reactstrap\";\r\n\r\nfunction OrdersTable({ orders, handleEditClick, handleCheckboxClick }) {\r\n  return (\r\n    <Table bordered striped responsive size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Address 1</th>\r\n          <th>City</th>\r\n          <th>County</th>\r\n          <th>Postcode</th>\r\n          <th>Country</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {orders.map((order, index) => {\r\n          let customer = order.deliver_to_attributes;\r\n          return (\r\n            <tr key={index}>\r\n              <td>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  id={index}\r\n                  defaultChecked=\"true\"\r\n                  onChange={handleCheckboxClick}\r\n                />\r\n              </td>\r\n              <td>{customer.first_name}</td>\r\n              <td>{customer.last_name}</td>\r\n              <td>{customer.address1}</td>\r\n              <td>{customer.city}</td>\r\n              <td>{customer.state}</td>\r\n              <td>{customer.zip}</td>\r\n              <td>{customer.country}</td>\r\n              <th>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  size=\"sm\"\r\n                  id={index}\r\n                  onClick={handleEditClick}\r\n                >\r\n                  Edit Address\r\n                </Button>\r\n              </th>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default OrdersTable;\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { Header } from \"../Shared\";\r\nimport OrdersTable from \"./OrdersTable\";\r\n\r\nfunction OrdersView({\r\n  orders,\r\n  file,\r\n  handleEditAddressClick,\r\n  handleCheckboxClick,\r\n  handleImportClick,\r\n  setInitialState,\r\n}) {\r\n  return orders.length === 0 ? (\r\n    <>\r\n      <Header>No orders found</Header>\r\n      <Button color=\"danger\" onClick={setInitialState}>\r\n        Back\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      {file && <Header>File: {file.name}</Header>}\r\n      <OrdersTable\r\n        orders={orders}\r\n        handleCheckboxClick={handleCheckboxClick}\r\n        handleEditClick={handleEditAddressClick}\r\n      />\r\n      <div className=\"centered-parent\">\r\n        <Button color=\"danger\" onClick={setInitialState}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleImportClick}>Import</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrdersView;\r\n","import React, { useCallback } from \"react\";\r\nimport \"./FileUploadArea.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction FileUploadArea({ selectedVendor, handleFileSubmit }) {\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tif (acceptedFiles[0]) {\r\n\t\t\t\thandleFileSubmit(selectedVendor.name, acceptedFiles[0]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedVendor, handleFileSubmit]\r\n\t);\r\n\r\n\tconst { getRootProps, getInputProps } = useDropzone({\r\n\t\tonDrop,\r\n\t\tmultiple: false,\r\n\t\taccept: selectedVendor.file_type,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} className=\"dropzone-container\">\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<div className=\"dropzone-content\">\r\n\t\t\t\t<FontAwesomeIcon icon=\"upload\" />\r\n\t\t\t\t<span>Click to upload file ({selectedVendor.file_type})</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FileUploadArea;\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, Button } from \"reactstrap\";\r\nimport { SelectForm } from \"../Shared\";\r\n\r\nfunction ImportPageModal({\r\n  isOpen,\r\n  toggle,\r\n  modalType,\r\n  addresses,\r\n  handleUpdateAddress,\r\n}) {\r\n  let header, body;\r\n  if (modalType === \"editAddress\") {\r\n    header = \"Select address\";\r\n    body = (\r\n      <SelectForm\r\n        options={addresses}\r\n        onSubmit={handleUpdateAddress}\r\n        useObjects={true}\r\n        optionKey=\"summaryline\"\r\n        children={\r\n          <div className=\"button-parent\">\r\n            <Button color=\"danger\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen}>\r\n      <ModalHeader toggle={toggle}>{header}</ModalHeader>\r\n      <ModalBody>{body}</ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ImportPageModal;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { IMPORT_VENDORS } from \"../../config\";\r\nimport * as api from \"../../api/BackendApi\";\r\nimport { reducer } from \"../utils\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Jumbotron, Spinner, Select, Header } from \"../Shared\";\r\nimport OrdersView from \"./OrdersView\";\r\nimport FileUploadArea from \"./FileUploadArea\";\r\nimport ImportPageModal from \"./ImportPageModal\";\r\n\r\nvar intialState = {\r\n  activeOrderIndex: null,\r\n  selectedVendor: IMPORT_VENDORS[0],\r\n};\r\n\r\nfunction ImportPage() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [orders, setOrders] = useState([]);\r\n  const [addresses, setAddresses] = useState([]);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [showInitialView, setShowInitialView] = useState(true);\r\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\r\n  const [pageVariables, setPageVariables] = useReducer(reducer, intialState);\r\n\r\n  const toggle = () => setModalOpen(!modalOpen);\r\n\r\n  function handleVendorChange(vendor) {\r\n    setPageVariables({ selectedVendor: vendor });\r\n\r\n    if (!vendor.requires_file) {\r\n      getOrders(vendor.name);\r\n    }\r\n  }\r\n\r\n  function getOrders(vendorName, file) {\r\n    setLoading(true);\r\n\r\n    var params = {\r\n      vendor: vendorName,\r\n      file: file,\r\n    };\r\n\r\n    api.convertFile(params).then((json) => {\r\n      setLoading(false);\r\n\r\n      if (json.error) {\r\n        toast.dark(\r\n          \"Error getting orders, ensure you are uploading the correct file.\"\r\n        );\r\n      } else {\r\n        setOrders(json);\r\n        setFile(file);\r\n        setSelectedIndexes(json.map((x, idx) => idx));\r\n        setShowInitialView(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleEditAddressClick(event) {\r\n    const { id } = event.target;\r\n    let index = parseInt(id);\r\n\r\n    var params = {\r\n      postcode: orders[index].deliver_to_attributes.zip,\r\n    };\r\n\r\n    api.getPostcodeAddresses(params).then((json) => {\r\n      setPageVariables({ activeOrderIndex: index });\r\n      setAddresses(json);\r\n      setModalOpen(true);\r\n    });\r\n  }\r\n\r\n  function handleUpdateAddress(address) {\r\n    const { premise, street, posttown, county, postcode } = address;\r\n\r\n    let tempOrders = orders.map((order, idx) => {\r\n      if (idx === pageVariables.activeOrderIndex) {\r\n        order.deliver_to_attributes.address1 = premise + \" \" + street;\r\n        order.deliver_to_attributes.city = posttown;\r\n        order.deliver_to_attributes.state = county;\r\n        order.deliver_to_attributes.zip = postcode;\r\n      }\r\n      return order;\r\n    });\r\n\r\n    toggle();\r\n    setOrders(tempOrders);\r\n  }\r\n\r\n  function handleCheckboxClick(event) {\r\n    const { id, checked } = event.target;\r\n\r\n    let index = parseInt(id);\r\n\r\n    setSelectedIndexes(\r\n      checked\r\n        ? [...selectedIndexes, index]\r\n        : selectedIndexes.filter((idx) => idx !== index)\r\n    );\r\n  }\r\n\r\n  function handleImportClick() {\r\n    toast.dark(\"Importing...\");\r\n\r\n    var selectedOrders = orders.filter((order, idx) =>\r\n      selectedIndexes.includes(idx)\r\n    );\r\n\r\n    var params = {\r\n      orders: selectedOrders,\r\n    };\r\n\r\n    api.importOrders(params).then((json) => {\r\n      toast.dark(`Imported ${json.length} orders`);\r\n      setInitialState();\r\n    });\r\n  }\r\n\r\n  function setInitialState() {\r\n    setPageVariables(intialState);\r\n    setOrders([]);\r\n    setShowInitialView(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Import to Veeqo</Jumbotron>\r\n      {showInitialView ? (\r\n        <>\r\n          <Header>Select data source</Header>\r\n          <Select\r\n            options={IMPORT_VENDORS}\r\n            objectTitleKey=\"title\"\r\n            onChange={handleVendorChange}\r\n            useObjects={true}\r\n          />\r\n          {loading ? (\r\n            <Spinner style={{ marginTop: \"60px\" }} />\r\n          ) : (\r\n            <FileUploadArea\r\n              selectedVendor={pageVariables.selectedVendor}\r\n              handleFileSubmit={getOrders}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <OrdersView\r\n          orders={orders}\r\n          file={file}\r\n          handleEditAddressClick={handleEditAddressClick}\r\n          handleCheckboxClick={handleCheckboxClick}\r\n          handleImportClick={handleImportClick}\r\n          setInitialState={setInitialState}\r\n        />\r\n      )}\r\n      <ImportPageModal\r\n        isOpen={modalOpen}\r\n        toggle={toggle}\r\n        modalType={\"editAddress\"}\r\n        addresses={addresses}\r\n        handleUpdateAddress={handleUpdateAddress}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportPage;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { UPDATE_VENDORS } from \"../../config\";\r\nimport * as api from \"../../api/BackendApi\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Jumbotron, Spinner, Select, Header } from \"../Shared\";\r\n\r\nfunction UpdatePage() {\r\n  const initialVendor = UPDATE_VENDORS[0];\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedVendor, setSelectedVendor] = useState(initialVendor);\r\n\r\n  function handleUpdateClick() {\r\n    setLoading(true);\r\n\r\n    var params = {\r\n      vendor: selectedVendor.name,\r\n    };\r\n\r\n    api.updateSpreadsheet(params).then((orders) => {\r\n      if (orders.length > 0) {\r\n        toast.dark(`Added ${orders.length} order(s)`);\r\n      } else {\r\n        toast.dark(\"No orders added\");\r\n      }\r\n\r\n      setLoading(false);\r\n      setSelectedVendor(initialVendor);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Update Google Spreadsheet</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ width: \"70px\", height: \"70px\", marginTop: \"50px\" }} />\r\n      ) : (\r\n        <>\r\n          <Header>Select Spreadsheet</Header>\r\n          <Select\r\n            options={UPDATE_VENDORS}\r\n            objectTitleKey=\"title\"\r\n            onChange={setSelectedVendor}\r\n            useObjects={true}\r\n          />\r\n          <Button onClick={handleUpdateClick}>Update</Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePage;\r\n","import React, { useState } from \"react\";\r\nimport \"./TurnoverPage.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\n\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Input } from \"reactstrap\";\r\nimport { Jumbotron, Spinner, Card, Header } from \"../../Shared\";\r\n\r\nfunction TurnoverPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [turnover, setTurnover] = useState(null);\r\n\r\n  let currentMonth = moment().format(\"YYYY-MM\");\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { value } = event.target.elements.date;\r\n\r\n    if (value) {\r\n      setTurnover(null);\r\n      setLoading(true);\r\n\r\n      var params = {\r\n        start: moment(value).startOf(\"month\").format(\"YYYY/MM/DD\"),\r\n        end: moment(value).endOf(\"month\").format(\"YYYY/MM/DD\"),\r\n      };\r\n\r\n      api.getTurnover(params).then((json) => {\r\n        setTurnover(json);\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      toast.dark(\"Please select a date\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Turnover</Jumbotron>\r\n\r\n      <Form onSubmit={onSubmit} className=\"date-form\">\r\n        <Header>Select Month</Header>\r\n        <Input type=\"month\" name=\"date\" min=\"2017-04\" max={currentMonth} />\r\n        <Button type=\"submit\">Calculate</Button>\r\n      </Form>\r\n\r\n      {loading && <Spinner style={{ marginTop: \"50px\" }} />}\r\n      {turnover && (\r\n        <div className=\"totals-wrapper\">\r\n          <Card header=\"Total excluding VAT\" text={`£${turnover.total_ex_vat}`} />\r\n          <Card header=\"Total including VAT\" text={`£${turnover.total_with_vat}`} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TurnoverPage;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./OrderWell.css\";\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nfunction OrderWellTable({ orders }) {\r\n  return (\r\n    <Table bordered striped size=\"sm\" id=\"orderwell-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Order Number</th>\r\n          <th>Items</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {orders.map((order, index) => (\r\n          <tr key={index}>\r\n            <td>{order.date}</td>\r\n            <td>\r\n              <a target=\"_blank\" href={order.url} rel=\"noopener noreferrer\">\r\n                {order.id}\r\n              </a>\r\n            </td>\r\n            <td>\r\n              {order.items.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {index > 0 && <br />}\r\n                  {item}\r\n                </Fragment>\r\n              ))}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default OrderWellTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./OrderWell.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { Jumbotron, Spinner } from \"../../Shared\";\r\nimport OrderWellTable from \"./OrderWellTable\";\r\n\r\nfunction OrderWell() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [orders, setOrders] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    await api.getOrderWell().then((orders) => {\r\n      setOrders(orders);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function handleCopyClick() {\r\n    var el = document.getElementById(\"orderwell-table\");\r\n\r\n    var body = document.body,\r\n      range,\r\n      sel;\r\n    if (document.createRange && window.getSelection) {\r\n      range = document.createRange();\r\n      sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      try {\r\n        range.selectNodeContents(el);\r\n        sel.addRange(range);\r\n      } catch (e) {\r\n        range.selectNode(el);\r\n        sel.addRange(range);\r\n      }\r\n    } else if (body.createTextRange) {\r\n      range = body.createTextRange();\r\n      range.moveToElementText(el);\r\n      range.select();\r\n    }\r\n    document.execCommand(\"Copy\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Order Well</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ marginTop: \"120px\" }} />\r\n      ) : (\r\n        <>\r\n          <Button onClick={handleCopyClick}>Copy</Button>\r\n          <OrderWellTable orders={orders} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderWell;\r\n","import React, { useReducer, useState } from \"react\";\r\nimport \"./ComparisonPage.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\nimport { reducer } from \"../../utils\";\r\n\r\nimport moment from \"moment\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"react-dates/initialize\";\r\nimport { DateRangePicker } from \"react-dates\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Jumbotron, Header, Spinner, Card } from \"../../Shared\";\r\n\r\nconst intialDatesState = {\r\n  startDate: null,\r\n  endDate: null,\r\n  focusedInput: null,\r\n};\r\n\r\nfunction ComparisonPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dates, setDates] = useReducer(reducer, intialDatesState);\r\n\r\n  const [sales, setSales] = useState(null);\r\n  const [previousSales, setPreviousSales] = useState(null);\r\n\r\n  const setFocusedInput = (focusedInput) => setDates({ focusedInput: focusedInput });\r\n\r\n  async function fetchData(params, previousParams) {\r\n    await api.getTurnover(params).then((json) => {\r\n      setSales(json);\r\n    });\r\n    await api.getTurnover(previousParams).then((json) => {\r\n      setPreviousSales(json);\r\n    });\r\n  }\r\n\r\n  async function onSubmit() {\r\n    const { startDate, endDate } = dates;\r\n\r\n    if (startDate && endDate) {\r\n      setSales(null);\r\n      setPreviousSales(null);\r\n      setLoading(true);\r\n\r\n      var params = {\r\n        start: startDate.format(\"YYYY/MM/DD\"),\r\n        end: endDate.format(\"YYYY/MM/DD\"),\r\n      };\r\n\r\n      var previousParams = {\r\n        start: startDate.clone().subtract(1, \"years\").format(\"YYYY/MM/DD\"),\r\n        end: endDate.clone().subtract(1, \"years\").format(\"YYYY/MM/DD\"),\r\n      };\r\n\r\n      await fetchData(params, previousParams);\r\n\r\n      setLoading(false);\r\n    } else {\r\n      toast.dark(\"Please select both dates\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Sales Comparison</Jumbotron>\r\n      <Header>Select Date Range</Header>\r\n      <DateRangePicker\r\n        startDate={dates.startDate}\r\n        startDateId=\"1\"\r\n        endDate={dates.endDate}\r\n        endDateId=\"2\"\r\n        onDatesChange={setDates}\r\n        focusedInput={dates.focusedInput}\r\n        onFocusChange={setFocusedInput}\r\n        isOutsideRange={(day) =>\r\n          day.isBefore(moment(\"04/2018\", \"MM/YYYY\")) || day.isAfter(moment())\r\n        }\r\n        displayFormat=\"DD/MM/YYYY\"\r\n      />\r\n      <Button onClick={onSubmit} className=\"calc-button\">\r\n        Calculate\r\n      </Button>\r\n\r\n      {loading && <Spinner style={{ marginTop: \"50px\" }} />}\r\n      {sales && previousSales && (\r\n        <div className=\"totals-wrapper\">\r\n          <Card\r\n            header={\"Previous Year\"}\r\n            text={previousSales.total_with_vat}\r\n            description={\"*With VAT\"}\r\n          />\r\n          <Card\r\n            header={\"Selected Year\"}\r\n            text={sales.total_with_vat}\r\n            description={\"*With VAT\"}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComparisonPage;\r\n","import React from \"react\";\r\n\r\nimport { Input, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\r\nimport { Select, Header } from \"../../Shared\";\r\n\r\nfunction IntialView({ carriers, formState, onFormChange, updateFormState }) {\r\n  const { carrier, orderUrl } = formState;\r\n\r\n  return (\r\n    <>\r\n      <InputGroup style={{ width: \"400px\" }}>\r\n        <InputGroupAddon addonType=\"prepend\">\r\n          <InputGroupText>URL</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input\r\n          name=\"orderUrl\"\r\n          type=\"text\"\r\n          placeholder=\"Veeqo Order URL\"\r\n          value={orderUrl}\r\n          onChange={onFormChange}\r\n        />\r\n      </InputGroup>\r\n      <Header>Select Carrier</Header>\r\n      <Select\r\n        name=\"carrier\"\r\n        useObjects={true}\r\n        options={carriers}\r\n        objectTitleKey=\"title\"\r\n        onChange={updateFormState}\r\n      />\r\n      {carrier.accounts && (\r\n        <>\r\n          <Header>Select Account</Header>\r\n          <Select\r\n            name=\"account\"\r\n            options={carrier.accounts}\r\n            onChange={onFormChange}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IntialView;\r\n","import React from \"react\";\r\nimport \"./ShippingCreatePage.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nfunction ItemsTable({ items, handleDeleteItem }) {\r\n  return (\r\n    <Table striped size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th>Item</th>\r\n          <th>Height (cm)</th>\r\n          <th>Width (cm)</th>\r\n          <th>Length (cm)</th>\r\n          <th>Weight (kg)</th>\r\n          <th>Quantity</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items.map((item, index) => (\r\n          <tr key={index}>\r\n            <td>{item.name}</td>\r\n            <td>{item.height}</td>\r\n            <td>{item.width}</td>\r\n            <td>{item.length}</td>\r\n            <td>{item.weight}</td>\r\n            <td>{item.quantity}</td>\r\n            <td>\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"secondary\"\r\n                className=\"times-button\"\r\n                onClick={() => handleDeleteItem(index)}\r\n              >\r\n                <FontAwesomeIcon icon=\"times\" />\r\n              </Button>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default ItemsTable;\r\n","import React from \"react\";\r\nimport \"./ShippingCreatePage.css\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { SelectForm, Header } from \"../../Shared\";\r\nimport ItemsTable from \"./ItemsTable\";\r\n\r\nfunction ItemsView({ items, formState, updateFormState }) {\r\n  function handleAddItem(newItem) {\r\n    var updatedItems = [...formState.items];\r\n    var index = updatedItems.findIndex((item) => item._id === newItem._id);\r\n\r\n    if (index > -1) {\r\n      updatedItems[index].quantity += 1;\r\n    } else {\r\n      updatedItems.push({ ...newItem, quantity: 1 });\r\n    }\r\n\r\n    updateFormState(updatedItems, \"items\");\r\n  }\r\n\r\n  function handleDeleteItem(index) {\r\n    var updatedItems = [...formState.items];\r\n\r\n    if (updatedItems[index].quantity > 1) {\r\n      updatedItems[index].quantity -= 1;\r\n    } else {\r\n      updatedItems.splice(index, 1);\r\n    }\r\n\r\n    updateFormState(updatedItems, \"items\");\r\n  }\r\n\r\n  function calculateWeight() {\r\n    var total = 0;\r\n    formState.items.forEach((item) => {\r\n      total += item.quantity * item.weight;\r\n    });\r\n    return total;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>Items</Header>\r\n      <div className=\"items-container\">\r\n        <div>\r\n          <ItemsTable items={formState.items} handleDeleteItem={handleDeleteItem} />\r\n          {formState.items.length > 0 && (\r\n            <h6>Total weight: {calculateWeight()} kg</h6>\r\n          )}\r\n        </div>\r\n        <div className=\"items-menu\">\r\n          <Header>Select Item</Header>\r\n          <SelectForm\r\n            options={items}\r\n            onSubmit={handleAddItem}\r\n            useObjects={true}\r\n            optionKey=\"name\"\r\n            children={\r\n              <Button\r\n                size=\"sm\"\r\n                color=\"primary\"\r\n                style={{ marginTop: \"10px\" }}\r\n                type=\"submit\"\r\n              >\r\n                Add\r\n              </Button>\r\n            }\r\n            inputStyle={{ height: \"200px\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemsView;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport \"./ShippingCreatePage.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\nimport { reducer } from \"../../utils\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Jumbotron, Spinner } from \"../../Shared\";\r\nimport InitialView from \"./InitialView\";\r\nimport ItemsView from \"./ItemsView\";\r\n\r\nconst intialFormState = {\r\n  orderUrl: \"\",\r\n  carrier: null,\r\n  account: null,\r\n  items: [],\r\n};\r\n\r\nfunction ShippingCreatePage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [initialView, setInitialView] = useState(true);\r\n  const [formState, setFormState] = useReducer(reducer, intialFormState);\r\n\r\n  const [carriers, setCarriers] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    await api.getItems().then((items) => {\r\n      setItems(items);\r\n    });\r\n\r\n    await api.getCarriers().then((carriers) => {\r\n      setCarriers(carriers);\r\n      updateFormState(carriers[0], \"carrier\");\r\n    });\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  function onFormChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormState({ [name]: value });\r\n  }\r\n\r\n  function updateFormState(data, name) {\r\n    if (name === \"carrier\") {\r\n      setFormState({\r\n        carrier: data,\r\n        account: data.accounts ? data.accounts[0] : null,\r\n      });\r\n    } else if (name === \"items\") {\r\n      setFormState({\r\n        items: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleCreateShipment() {\r\n    toast.dark(\"Creating shipment...\");\r\n\r\n    var params = {\r\n      shipment: {\r\n        orderUrl: formState.orderUrl,\r\n        carrier: formState.carrier.name,\r\n        account: formState.account,\r\n        items: formState.items,\r\n      },\r\n    };\r\n\r\n    api.createShipment(params).then((reponse) => {\r\n      if (reponse.error) {\r\n        toast.dark(reponse.message);\r\n      } else {\r\n        toast.dark(\"Created\");\r\n\r\n        setInitialView(true);\r\n        setFormState({\r\n          ...intialFormState,\r\n          carrier: carriers[0],\r\n          account: carriers[0].accounts,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  function updateView() {\r\n    setInitialView(!initialView);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Create Shipment</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ marginTop: \"120px\" }} />\r\n      ) : initialView ? (\r\n        <>\r\n          <InitialView\r\n            carriers={carriers}\r\n            formState={formState}\r\n            updateFormState={updateFormState}\r\n            onFormChange={onFormChange}\r\n          />\r\n          <Button onClick={updateView}>Next</Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <ItemsView\r\n            items={items}\r\n            formState={formState}\r\n            updateFormState={updateFormState}\r\n          />\r\n          <div className=\"centered-parent\">\r\n            <Button color=\"danger\" onClick={updateView}>\r\n              Back\r\n            </Button>\r\n            <Button onClick={handleCreateShipment}>Create</Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShippingCreatePage;\r\n","import React from \"react\";\r\nimport \"./ShippingItemsPage.css\";\r\n\r\nfunction Item({ item, onClick, formState }) {\r\n  const { name } = item;\r\n\r\n  return (\r\n    <span\r\n      className={item._id === formState._id ? \"item-selected item\" : \"item\"}\r\n      onClick={() => onClick(item)}\r\n    >\r\n      {name}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\n\r\nimport { Input, FormGroup, Label } from \"reactstrap\";\r\n\r\nfunction ItemForm({ formState, onFormChange }) {\r\n  const { name, height, width, length, weight } = formState;\r\n\r\n  return (\r\n    <>\r\n      <FormGroup>\r\n        <Label>Name</Label>\r\n        <Input type=\"text\" name=\"name\" value={name} onChange={onFormChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Height (cm)</Label>\r\n        <Input\r\n          name=\"height\"\r\n          type=\"number\"\r\n          min={0}\r\n          value={height}\r\n          onChange={onFormChange}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Width (cm)</Label>\r\n        <Input\r\n          name=\"width\"\r\n          type=\"number\"\r\n          min={0}\r\n          value={width}\r\n          onChange={onFormChange}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Length (cm)</Label>\r\n        <Input\r\n          name=\"length\"\r\n          type=\"number\"\r\n          min={0}\r\n          value={length}\r\n          onChange={onFormChange}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Weight (kg)</Label>\r\n        <Input\r\n          name=\"weight\"\r\n          type=\"number\"\r\n          min={0}\r\n          value={weight}\r\n          onChange={onFormChange}\r\n        />\r\n      </FormGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ItemForm;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport \"./ShippingItemsPage.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\nimport { reducer } from \"../../utils\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Jumbotron, Spinner, Header } from \"../../Shared\";\r\nimport Item from \"./Item\";\r\nimport ItemForm from \"./ItemForm\";\r\n\r\nconst intialFormState = {\r\n  _id: null,\r\n  name: \"\",\r\n  height: \"\",\r\n  width: \"\",\r\n  length: \"\",\r\n  weight: \"\",\r\n};\r\n\r\nfunction ShippingItemsPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState(null);\r\n\r\n  const [formState, setFormState] = useReducer(reducer, intialFormState);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function fetchData() {\r\n    api.getItems().then((items) => {\r\n      setItems(items);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function onFormChange(event) {\r\n    const { name, value } = event.target;\r\n    setFormState({ [name]: value });\r\n  }\r\n\r\n  function onCreateClick() {\r\n    setFormState(intialFormState);\r\n  }\r\n\r\n  function onButtonClick(event) {\r\n    const { name } = event.target;\r\n\r\n    var params = {\r\n      id: formState._id ? formState._id.$oid : null,\r\n      item: {\r\n        name: formState.name,\r\n        height: formState.height,\r\n        width: formState.width,\r\n        length: formState.length,\r\n        weight: formState.weight,\r\n      },\r\n    };\r\n\r\n    var valid = validateForm();\r\n\r\n    if (valid) {\r\n      if (name === \"delete\") {\r\n        api.deleteItem(params).then((response) => {\r\n          if (response.error) {\r\n            toast.dark(response.message);\r\n          } else {\r\n            updateItems(response);\r\n          }\r\n        });\r\n      } else {\r\n        api.updateItem(params).then((response) => {\r\n          if (response.error) {\r\n            toast.dark(response.message);\r\n          } else {\r\n            updateItems(response);\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateItems(response) {\r\n    var updatedItems = [...items];\r\n\r\n    if (response.status === \"created\") {\r\n      setFormState(response.item);\r\n      updatedItems.push(response.item);\r\n    } else if (response.status === \"updated\") {\r\n      var index = items.findIndex(\r\n        (item) => item._id.$oid === response.item._id.$oid\r\n      );\r\n      updatedItems[index] = response.item;\r\n    } else if (response.status === \"deleted\") {\r\n      updatedItems = items.filter((item) => item._id.$oid !== response._id);\r\n      setFormState(intialFormState);\r\n    }\r\n    setItems(updatedItems);\r\n  }\r\n\r\n  function validateForm() {\r\n    const { name, height, width, length, weight } = formState;\r\n\r\n    if (\r\n      name === \"\" ||\r\n      height === \"\" ||\r\n      width === \"\" ||\r\n      weight === \"\" ||\r\n      length === \"\"\r\n    ) {\r\n      toast.dark(\"Form elements cannot be empty.\");\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Edit Items</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ marginTop: \"120px\" }} />\r\n      ) : (\r\n        <>\r\n          <Button color=\"primary\" size=\"sm\" onClick={onCreateClick}>\r\n            Create Item\r\n          </Button>\r\n          <div className=\"items-menu-container\">\r\n            <div className=\"items-menu\">\r\n              <Header>Items</Header>\r\n              {items.map((item, index) => (\r\n                <Item\r\n                  key={index}\r\n                  item={item}\r\n                  onClick={setFormState}\r\n                  formState={formState}\r\n                />\r\n              ))}\r\n            </div>\r\n            <div className=\"items-form\">\r\n              {formState._id ? (\r\n                <>\r\n                  <Header>Edit Item</Header>\r\n                  <ItemForm formState={formState} onFormChange={onFormChange} />\r\n                  <div className=\"centered-parent\">\r\n                    <Button name=\"delete\" color=\"danger\" onClick={onButtonClick}>\r\n                      Delete\r\n                    </Button>\r\n                    <Button name=\"update\" onClick={onButtonClick}>\r\n                      Update\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Header>Create Item</Header>\r\n                  <ItemForm formState={formState} onFormChange={onFormChange} />\r\n                  <Button name=\"create\" onClick={onButtonClick}>\r\n                    Create\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ShippingItemsPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./DeliveriesPage.css\";\r\n\r\nimport * as api from \"../../api/BackendApi\";\r\n\r\nimport { Jumbotron } from \"../Shared\";\r\nimport moment from \"moment\";\r\n\r\nfunction DeliveriesPage() {\r\n  const [days, setDays] = useState([]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  function renderDays() {\r\n    var days = [];\r\n    for (var i = 0; i < 35; i++) {\r\n      days.push(<div key={i}>{i}</div>);\r\n    }\r\n    return days;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>\r\n        <span>Deliveries</span>\r\n      </Jumbotron>\r\n      <div className=\"month-wrapper\">\r\n        <span>Monday</span>\r\n        <span>Tuesday</span>\r\n        <span>Wednesday</span>\r\n        <span>Thursday</span>\r\n        <span>Friday</span>\r\n        <span>Saturday</span>\r\n        <span>Sunday</span>\r\n        {renderDays()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveriesPage;\r\n","import React from \"react\";\r\n\r\nimport { Jumbotron } from \"./Shared\";\r\n\r\nfunction PageNotFound() {\r\n  return <Jumbotron>404 - Page not found</Jumbotron>;\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faUpload,\r\n  faPlus,\r\n  faPencilAlt,\r\n  faTrashAlt,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport ImportPage from \"./components/import/ImportPage\";\r\nimport UpdatePage from \"./components/update/UpdatePage\";\r\nimport TurnoverPage from \"./components/bandq/turnover/TurnoverPage\";\r\nimport OrderWellPage from \"./components/bandq/orderwell/OrderWellPage\";\r\nimport ComparisonPage from \"./components/bandq/comparison/ComparisonPage\";\r\nimport ShippingCreatePage from \"./components/shipping/create/ShippingCreatePage\";\r\nimport ShippingItemsPage from \"./components/shipping/items/ShippingItemsPage\";\r\nimport DeliveriesPage from \"./components/deliveries/DeliveriesPage\";\r\nimport PageNotFound from \"./components/PageNotFound\";\r\n\r\nlibrary.add({\r\n  faUpload,\r\n  faPlus,\r\n  faPencilAlt,\r\n  faTrashAlt,\r\n  faTimes,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Navbar />\r\n        <ToastContainer hideProgressBar={true} autoClose={3000} />\r\n\r\n        <div className=\"wrapper\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route path=\"/update\" component={UpdatePage} />\r\n            <Route path=\"/import/\" component={ImportPage} />\r\n\r\n            <Route path=\"/bandq/turnover\" component={TurnoverPage} />\r\n            <Route path=\"/bandq/orderwell\" component={OrderWellPage} />\r\n            <Route path=\"/bandq/comparison\" component={ComparisonPage} />\r\n\r\n            <Route path=\"/shipping/create\" component={ShippingCreatePage} />\r\n            <Route path=\"/shipping/items\" component={ShippingItemsPage} />\r\n            <Route path=\"/deliveries\" component={DeliveriesPage} />\r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}