{"version":3,"sources":["components/Navbar.js","components/shared/CardComponent.js","components/shared/HeaderComponent.js","components/shared/JumbotronComponent.js","components/shared/SelectComponents.js","components/shared/SelectFormComponent.js","components/shared/SpinnerComponent.js","components/shared/MultiSelectComponent.js","components/Shared.js","components/Homepage.js","config.js","api/ApiUtils.js","api/BackendApi.js","components/utils.js","components/import/OrdersTable.js","components/import/OrdersView.js","components/import/FileUploadArea.js","components/import/ImportPageModal.js","components/import/ImportPage.js","components/update/UpdatePage.js","components/calendar/FormView.js","components/calendar/InitialView.js","components/calendar/CalendarPage.js","components/bandq/turnover/TurnoverPage.js","components/bandq/orderwell/OrderWellTable.js","components/bandq/orderwell/OrderWellPage.js","components/bandq/comparison/ComparisonPage.js","components/PageNotFound.js","App.js","index.js"],"names":["Navbar","useState","isOpen","setIsOpen","color","dark","expand","NavbarBrand","href","className","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","Card","header","text","description","Header","children","Jumbotron","Select","value","options","onChange","useObjects","objectTitleKey","multiple","name","style","Input","type","event","target","option","find","_option","map","index","key","SelectForm","onSubmit","optionKey","inputStyle","Form","preventDefault","elements","Spinner","MultiSelect","CardComponent","HeaderComponent","JumbotronComponent","SelectComponents","SelectFormComponent","SpinnerComponent","predefinedSuggestions","input","setInput","suggestions","setSuggestions","onAddClick","suggestion","onDeleteClick","id","currentTarget","filter","parseInt","inputProps","placeholder","newValue","onKeyPress","icon","onSuggestionsFetchRequested","toLowerCase","includes","onSuggestionsClearRequested","onSuggestionSelected","getSuggestionValue","renderSuggestion","Homepage","API_BASE_URL","UPDATE_VENDORS","title","IMPORT_VENDORS","requires_file","file_type","EMAILS","handleResponse","response","ok","json","Error","getTurnover","params","start","end","url","fetch","then","catch","error","console","getOrderWell","reducer","state","newState","OrdersTable","orders","handleEditClick","handleCheckboxClick","Table","bordered","striped","responsive","size","order","customer","deliver_to_attributes","defaultChecked","first_name","last_name","address1","city","zip","country","Button","OrdersView","file","handleEditAddressClick","handleImportClick","setInitialState","length","FileUploadArea","selectedVendor","handleFileSubmit","onDrop","useCallback","acceptedFiles","useDropzone","accept","getRootProps","getInputProps","ImportPageModal","body","toggle","modalType","addresses","handleUpdateAddress","Modal","ModalHeader","ModalBody","intialState","activeOrderIndex","ImportPage","loading","setLoading","setFile","setOrders","setAddresses","modalOpen","setModalOpen","showInitialView","setShowInitialView","selectedIndexes","setSelectedIndexes","useReducer","pageVariables","setPageVariables","getOrders","vendorName","vendor","method","formData","FormData","append","api","toast","x","idx","marginTop","postcode","checked","headers","JSON","stringify","address","premise","street","posttown","county","tempOrders","UpdatePage","initialVendor","setSelectedVendor","width","height","EventForm","formState","onFormChange","toggleView","date","time","FormGroup","Label","InitialView","calendars","emails","orderUrl","calendar","attendees","summary","marginBottom","initialFormState","CalendarPage","view","setView","setFormState","setCalendars","setOrder","onResponse","number","onSuccess","message","useEffect","FormView","datetime","moment","toISOString","add","TurnoverPage","turnover","setTurnover","currentMonth","format","startOf","endOf","min","max","total_ex_vat","total_with_vat","OrderWellTable","rel","items","item","OrderWell","a","fetchData","range","sel","el","document","getElementById","createRange","window","getSelection","removeAllRanges","selectNodeContents","addRange","e","selectNode","createTextRange","moveToElementText","select","execCommand","intialDatesState","startDate","endDate","focusedInput","ComparisonPage","dates","setDates","sales","setSales","previousSales","setPreviousSales","previousParams","clone","subtract","startDateId","endDateId","onDatesChange","onFocusChange","isOutsideRange","day","isBefore","isAfter","displayFormat","PageNotFound","library","faUpload","faPlus","faPencilAlt","faTrashAlt","faTimes","faChevronDown","App","hideProgressBar","autoClose","exact","path","component","OrderWellPage","ReactDOM","render"],"mappings":"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","file":"static/js/main.70cd5e4b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Navbar as NavigationBar,\r\n  Collapse,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nfunction Navbar() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <NavigationBar color=\"dark\" dark expand=\"md\">\r\n      <NavbarBrand href=\"/\">\r\n        <img className=\"logo\" src=\"/images/csc-logo.png\" alt=\"logo\" />\r\n      </NavbarBrand>\r\n      <NavbarBrand href=\"/\">CSC Services</NavbarBrand>\r\n      <NavbarToggler onClick={toggle} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n        <Nav className=\"mr-auto\" navbar>\r\n          <NavLink href=\"/update\">Update</NavLink>\r\n          <NavLink href=\"/import\">Import</NavLink>\r\n          <NavLink href=\"/calendar\">Calendar</NavLink>\r\n          <UncontrolledDropdown nav inNavbar>\r\n            <DropdownToggle nav caret>\r\n              {\"B & Q\"}\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem>\r\n                <NavLink href=\"/bandq/turnover\">Turnover</NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink href=\"/bandq/orderwell\">Order Well</NavLink>\r\n              </DropdownItem>\r\n              <DropdownItem>\r\n                <NavLink href=\"/bandq/comparison\">Sales Comparison</NavLink>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n      </Collapse>\r\n    </NavigationBar>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Card({ header, text, description }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <label>{header}</label>\r\n      <span>{text}</span>\r\n      {description && <p>{description}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nfunction Header({ children }) {\r\n  return <div className=\"header\">{children}</div>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return <div className=\"jumbotron\">{children}</div>;\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { Input } from \"reactstrap\";\r\n\r\nfunction Select({\r\n  value,\r\n  options,\r\n  onChange,\r\n  useObjects,\r\n  objectTitleKey = \"name\",\r\n  multiple,\r\n  name,\r\n  style,\r\n}) {\r\n  function _onChange(event) {\r\n    if (useObjects) {\r\n      const { value, name } = event.target;\r\n\r\n      var option = options.find((_option) => _option[objectTitleKey] === value);\r\n      onChange(option, name);\r\n    } else {\r\n      onChange(event);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Input\r\n      type=\"select\"\r\n      className=\"select\"\r\n      name={name}\r\n      style={style}\r\n      multiple={multiple ? true : false}\r\n      value={value}\r\n      onChange={_onChange}\r\n    >\r\n      {options.map((option, index) => (\r\n        <option key={index}>{useObjects ? option[objectTitleKey] : option}</option>\r\n      ))}\r\n    </Input>\r\n  );\r\n}\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\n\r\nimport { Form, Input } from \"reactstrap\";\r\n\r\nfunction SelectForm({\r\n  options,\r\n  onSubmit,\r\n  useObjects,\r\n  optionKey,\r\n  children,\r\n  inputStyle,\r\n}) {\r\n  function onFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { value } = event.target.elements.option;\r\n\r\n    if (!value) {\r\n      onSubmit(options[0]);\r\n    } else if (useObjects) {\r\n      var option = options.find((_option) => _option[optionKey] === value);\r\n      onSubmit(option);\r\n    } else {\r\n      onSubmit(value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onFormSubmit}>\r\n      <Input name=\"option\" type=\"select\" multiple style={inputStyle}>\r\n        {options.map((option, index) => {\r\n          var value = useObjects ? option[optionKey] : option;\r\n          return (\r\n            <option key={index} value={value}>\r\n              {value}\r\n            </option>\r\n          );\r\n        })}\r\n      </Input>\r\n      {children}\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default SelectForm;\r\n","import React from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { Spinner as ReactStrapSpinner } from \"reactstrap\";\r\n\r\nfunction Spinner({ style }) {\r\n\treturn <ReactStrapSpinner color=\"dark\" className=\"spinner\" style={style} />;\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from \"react\";\r\nimport \"./Shared.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Autosuggest from \"react-autosuggest\";\r\n\r\nfunction MultiSelect({ options, onChange, name, predefinedSuggestions }) {\r\n  const [input, setInput] = useState(\"\");\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  function onAddClick(suggestion) {\r\n    if (input !== \"\") {\r\n      var value = suggestion ? [...options, suggestion] : [...options, input];\r\n      onChange(value, name);\r\n      setInput(\"\");\r\n    }\r\n  }\r\n\r\n  function onDeleteClick(event) {\r\n    const { id } = event.currentTarget;\r\n\r\n    var value = options.filter((option, index) => {\r\n      return index !== parseInt(id);\r\n    });\r\n\r\n    onChange(value, name);\r\n  }\r\n\r\n  function onSuggestionsFetchRequested({ value }) {\r\n    setSuggestions(\r\n      predefinedSuggestions.filter((suggestion) => {\r\n        return suggestion.toLowerCase().includes(value);\r\n      })\r\n    );\r\n  }\r\n\r\n  const onSuggestionsClearRequested = () => setSuggestions([]);\r\n  const onSuggestionSelected = (event, { suggestion }) => onAddClick(suggestion);\r\n  const getSuggestionValue = (value) => value;\r\n  const renderSuggestion = (suggestion) => suggestion;\r\n\r\n  const inputProps = {\r\n    placeholder: \"Email\",\r\n    className: \"form-control\",\r\n    value: input,\r\n    onChange: (event, { newValue }) => {\r\n      setInput(newValue);\r\n    },\r\n    onKeyPress: (event) => {\r\n      if (event.key === \"Enter\") {\r\n        onAddClick(input);\r\n      }\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {options.map((option, index) => (\r\n        <div key={index} className=\"multiselect-option\">\r\n          <span>{option}</span>\r\n          <button id={index} onClick={onDeleteClick}>\r\n            <FontAwesomeIcon icon=\"times\" />\r\n          </button>\r\n        </div>\r\n      ))}\r\n      <Autosuggest\r\n        suggestions={suggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        onSuggestionSelected={onSuggestionSelected}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiSelect;\r\n","import CardComponent from \"./shared/CardComponent\";\r\nimport HeaderComponent from \"./shared/HeaderComponent\";\r\nimport JumbotronComponent from \"./shared/JumbotronComponent\";\r\nimport SelectComponents from \"./shared/SelectComponents\";\r\nimport SelectFormComponent from \"./shared/SelectFormComponent\";\r\nimport SpinnerComponent from \"./shared/SpinnerComponent\";\r\nimport MultiSelectComponent from \"./shared/MultiSelectComponent\";\r\n\r\nexport const Card = CardComponent;\r\nexport const Header = HeaderComponent;\r\nexport const Jumbotron = JumbotronComponent;\r\nexport const Select = SelectComponents;\r\nexport const SelectForm = SelectFormComponent;\r\nexport const Spinner = SpinnerComponent;\r\nexport const MultiSelect = MultiSelectComponent;\r\n","import React from \"react\";\r\n\r\nimport { Jumbotron } from \"./Shared\";\r\n\r\nfunction Homepage() {\r\n  return <Jumbotron>Welcome to Canadian Spa Services</Jumbotron>;\r\n}\r\n\r\nexport default Homepage;\r\n","export const API_BASE_URL =\r\n  process.env.NODE_ENV === \"production\" ? \"/api\" : \"http://localhost:4000/api\";\r\n\r\nexport const UPDATE_VENDORS = [\r\n  { name: \"bandq\", title: \"B&Q\" },\r\n  { name: \"homebase\", title: \"Homebase\" },\r\n  { name: \"jtf\", title: \"JTF\" },\r\n  { name: \"wayfair\", title: \"Wayfair\" },\r\n  { name: \"range\", title: \"The Range\" },\r\n  { name: \"travisperkins\", title: \"Travis Perkins\" },\r\n  { name: \"robert_dyas\", title: \"Robert Dyas\" },\r\n  { name: \"hornbach\", title: \"Hornbach\" },\r\n  { name: \"shop_direct\", title: \"Shop Direct\" },\r\n];\r\n\r\nexport const IMPORT_VENDORS = [\r\n  {\r\n    name: \"bandq\",\r\n    title: \"B&Q CSV\",\r\n    requires_file: true,\r\n    file_type: \".csv\",\r\n  },\r\n  {\r\n    name: \"argos\",\r\n    title: \"Argos CSV\",\r\n    requires_file: true,\r\n    file_type: \".csv\",\r\n  },\r\n  {\r\n    name: \"range\",\r\n    title: \"The Range\",\r\n    requires_file: false,\r\n    file_type: null,\r\n  },\r\n  {\r\n    name: \"homebase\",\r\n    title: \"Homebase XML\",\r\n    requires_file: true,\r\n    file_type: \".xml\",\r\n  },\r\n  {\r\n    name: \"wayfair\",\r\n    title: \"Wayfair CSV\",\r\n    requires_file: true,\r\n    file_type: \".csv\",\r\n  },\r\n  {\r\n    name: \"robert_dyas\",\r\n    title: \"Robert Dyas CSV\",\r\n    requires_file: true,\r\n    file_type: \".csv\",\r\n  },\r\n  {\r\n    name: \"shop_direct\",\r\n    title: \"Shop Direct TXT\",\r\n    requires_file: true,\r\n    file_type: \".txt\",\r\n  },\r\n  {\r\n    name: \"globus\",\r\n    title: \"Globus XML\",\r\n    requires_file: true,\r\n    file_type: \".xml\",\r\n  },\r\n  {\r\n    name: \"hornbach\",\r\n    title: \"Hornbach PDF\",\r\n    requires_file: true,\r\n    file_type: \".pdf\",\r\n  },\r\n];\r\n\r\nexport const EMAILS = [\r\n  \"shippinguk@canadianspacompany.com\",\r\n  \"warehouseuk@canadianspacompany.com\",\r\n  \"jasper.haward@canadianspacompany.com\",\r\n  \"kerry.avis@canadianspacompany.com\",\r\n  \"grace.wetherall@canadianspacompany.com\",\r\n  \"phil@canadianspacompany.com\",\r\n  \"troy@canadianspacompany.com\",\r\n  \"troy.d.labelle@gmail.com\",\r\n  \"troylabellespa@googlemail.com\",\r\n];\r\n","export function handleResponse(response) {\r\n  if (response.ok) {\r\n    return response.json();\r\n  } else {\r\n    throw new Error(\"Bad response.\");\r\n  }\r\n}\r\n","import { handleResponse } from \"./ApiUtils\";\r\nimport { API_BASE_URL } from \"../config\";\r\n\r\nexport function convertFile(params) {\r\n  const { vendor, file } = params;\r\n\r\n  let url = `${API_BASE_URL}/import/convert/${vendor}`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n  };\r\n\r\n  if (file) {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    options.body = formData;\r\n  }\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function importOrders(params) {\r\n  const { orders } = params;\r\n\r\n  let url = `${API_BASE_URL}/import/orders`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(orders),\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getPostcodeAddresses(params) {\r\n  const { postcode } = params;\r\n\r\n  let url = `${API_BASE_URL}/postcoder?postcode=${postcode}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function updateSpreadsheet(params) {\r\n  const { vendor } = params;\r\n\r\n  let url = `${API_BASE_URL}/update/${vendor}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getTurnover(params) {\r\n  const { start, end } = params;\r\n\r\n  let url = `${API_BASE_URL}/bandq/turnover?start=${start}&end=${end}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getOrderWell() {\r\n  let url = `${API_BASE_URL}/bandq/orderwell`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getVeeqoOrder(params) {\r\n  const { orderUrl } = params;\r\n\r\n  let url = `${API_BASE_URL}/veeqo?url=${orderUrl}`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function getCalendars() {\r\n  let url = `${API_BASE_URL}/calendar`;\r\n\r\n  return fetch(url)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n\r\nexport function createEvent(params) {\r\n  const { event } = params;\r\n\r\n  let url = `${API_BASE_URL}/calendar`;\r\n\r\n  let options = {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(event),\r\n  };\r\n\r\n  return fetch(url, options)\r\n    .then(handleResponse)\r\n    .catch((error) => console.error(error));\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport const reducer = (state, newState) => ({ ...state, ...newState });\r\n\r\nexport function useOutsideClick(ref, onOutsideClick) {\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        onOutsideClick();\r\n      }\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref, onOutsideClick]);\r\n}\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Table, Button, Input } from \"reactstrap\";\r\n\r\nfunction OrdersTable({ orders, handleEditClick, handleCheckboxClick }) {\r\n  return (\r\n    <Table bordered striped responsive size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th></th>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Address 1</th>\r\n          <th>City</th>\r\n          <th>County</th>\r\n          <th>Postcode</th>\r\n          <th>Country</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {orders.map((order, index) => {\r\n          let customer = order.deliver_to_attributes;\r\n          return (\r\n            <tr key={index}>\r\n              <td>\r\n                <Input\r\n                  type=\"checkbox\"\r\n                  id={index}\r\n                  defaultChecked=\"true\"\r\n                  onChange={handleCheckboxClick}\r\n                />\r\n              </td>\r\n              <td>{customer.first_name}</td>\r\n              <td>{customer.last_name}</td>\r\n              <td>{customer.address1}</td>\r\n              <td>{customer.city}</td>\r\n              <td>{customer.state}</td>\r\n              <td>{customer.zip}</td>\r\n              <td>{customer.country}</td>\r\n              <th>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  size=\"sm\"\r\n                  id={index}\r\n                  onClick={handleEditClick}\r\n                >\r\n                  Edit Address\r\n                </Button>\r\n              </th>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default OrdersTable;\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { Header } from \"../Shared\";\r\nimport OrdersTable from \"./OrdersTable\";\r\n\r\nfunction OrdersView({\r\n  orders,\r\n  file,\r\n  handleEditAddressClick,\r\n  handleCheckboxClick,\r\n  handleImportClick,\r\n  setInitialState,\r\n}) {\r\n  return orders.length === 0 ? (\r\n    <>\r\n      <Header>No orders found</Header>\r\n      <Button color=\"danger\" onClick={setInitialState}>\r\n        Back\r\n      </Button>\r\n    </>\r\n  ) : (\r\n    <>\r\n      {file && <Header>File: {file.name}</Header>}\r\n      <OrdersTable\r\n        orders={orders}\r\n        handleCheckboxClick={handleCheckboxClick}\r\n        handleEditClick={handleEditAddressClick}\r\n      />\r\n      <div className=\"centered-parent\">\r\n        <Button color=\"danger\" onClick={setInitialState}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleImportClick}>Import</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrdersView;\r\n","import React, { useCallback } from \"react\";\r\nimport \"./FileUploadArea.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useDropzone } from \"react-dropzone\";\r\n\r\nfunction FileUploadArea({ selectedVendor, handleFileSubmit }) {\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tif (acceptedFiles[0]) {\r\n\t\t\t\thandleFileSubmit(selectedVendor.name, acceptedFiles[0]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[selectedVendor, handleFileSubmit]\r\n\t);\r\n\r\n\tconst { getRootProps, getInputProps } = useDropzone({\r\n\t\tonDrop,\r\n\t\tmultiple: false,\r\n\t\taccept: selectedVendor.file_type,\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div {...getRootProps()} className=\"dropzone-container\">\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<div className=\"dropzone-content\">\r\n\t\t\t\t<FontAwesomeIcon icon=\"upload\" />\r\n\t\t\t\t<span>Click to upload file ({selectedVendor.file_type})</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FileUploadArea;\r\n","import React from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { Modal, ModalHeader, ModalBody, Button } from \"reactstrap\";\r\nimport { SelectForm } from \"../Shared\";\r\n\r\nfunction ImportPageModal({\r\n  isOpen,\r\n  toggle,\r\n  modalType,\r\n  addresses,\r\n  handleUpdateAddress,\r\n}) {\r\n  let header, body;\r\n  if (modalType === \"editAddress\") {\r\n    header = \"Select address\";\r\n    body = (\r\n      <SelectForm\r\n        options={addresses}\r\n        onSubmit={handleUpdateAddress}\r\n        useObjects={true}\r\n        optionKey=\"summaryline\"\r\n        children={\r\n          <div className=\"button-parent\">\r\n            <Button color=\"danger\" onClick={toggle}>\r\n              Cancel\r\n            </Button>\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Update\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen}>\r\n      <ModalHeader toggle={toggle}>{header}</ModalHeader>\r\n      <ModalBody>{body}</ModalBody>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ImportPageModal;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport \"./ImportPage.css\";\r\n\r\nimport { IMPORT_VENDORS } from \"../../config\";\r\nimport * as api from \"../../api/BackendApi\";\r\nimport { reducer } from \"../utils\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Jumbotron, Spinner, Select, Header } from \"../Shared\";\r\nimport OrdersView from \"./OrdersView\";\r\nimport FileUploadArea from \"./FileUploadArea\";\r\nimport ImportPageModal from \"./ImportPageModal\";\r\n\r\nvar intialState = {\r\n  activeOrderIndex: null,\r\n  selectedVendor: IMPORT_VENDORS[0],\r\n};\r\n\r\nfunction ImportPage() {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [orders, setOrders] = useState([]);\r\n  const [addresses, setAddresses] = useState([]);\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [showInitialView, setShowInitialView] = useState(true);\r\n  const [selectedIndexes, setSelectedIndexes] = useState([]);\r\n  const [pageVariables, setPageVariables] = useReducer(reducer, intialState);\r\n\r\n  const toggle = () => setModalOpen(!modalOpen);\r\n\r\n  function handleVendorChange(vendor) {\r\n    setPageVariables({ selectedVendor: vendor });\r\n\r\n    if (!vendor.requires_file) {\r\n      getOrders(vendor.name);\r\n    }\r\n  }\r\n\r\n  function getOrders(vendorName, file) {\r\n    setLoading(true);\r\n\r\n    var params = {\r\n      vendor: vendorName,\r\n      file: file,\r\n    };\r\n\r\n    api.convertFile(params).then((json) => {\r\n      setLoading(false);\r\n\r\n      if (json.error) {\r\n        toast.dark(\r\n          \"Error getting orders, ensure you are uploading the correct file.\"\r\n        );\r\n      } else {\r\n        setOrders(json);\r\n        setFile(file);\r\n        setSelectedIndexes(json.map((x, idx) => idx));\r\n        setShowInitialView(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleEditAddressClick(event) {\r\n    const { id } = event.target;\r\n    let index = parseInt(id);\r\n\r\n    var params = {\r\n      postcode: orders[index].deliver_to_attributes.zip,\r\n    };\r\n\r\n    api.getPostcodeAddresses(params).then((json) => {\r\n      setPageVariables({ activeOrderIndex: index });\r\n      setAddresses(json);\r\n      setModalOpen(true);\r\n    });\r\n  }\r\n\r\n  function handleUpdateAddress(address) {\r\n    const { premise, street, posttown, county, postcode } = address;\r\n\r\n    let tempOrders = orders.map((order, idx) => {\r\n      if (idx === pageVariables.activeOrderIndex) {\r\n        order.deliver_to_attributes.address1 = premise + \" \" + street;\r\n        order.deliver_to_attributes.city = posttown;\r\n        order.deliver_to_attributes.state = county;\r\n        order.deliver_to_attributes.zip = postcode;\r\n      }\r\n      return order;\r\n    });\r\n\r\n    toggle();\r\n    setOrders(tempOrders);\r\n  }\r\n\r\n  function handleCheckboxClick(event) {\r\n    const { id, checked } = event.target;\r\n\r\n    let index = parseInt(id);\r\n\r\n    setSelectedIndexes(\r\n      checked\r\n        ? [...selectedIndexes, index]\r\n        : selectedIndexes.filter((idx) => idx !== index)\r\n    );\r\n  }\r\n\r\n  function handleImportClick() {\r\n    toast.dark(\"Importing...\");\r\n\r\n    var selectedOrders = orders.filter((order, idx) =>\r\n      selectedIndexes.includes(idx)\r\n    );\r\n\r\n    var params = {\r\n      orders: selectedOrders,\r\n    };\r\n\r\n    api.importOrders(params).then((json) => {\r\n      toast.dark(`Imported ${json.length} orders`);\r\n      setInitialState();\r\n    });\r\n  }\r\n\r\n  function setInitialState() {\r\n    setPageVariables(intialState);\r\n    setOrders([]);\r\n    setShowInitialView(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Import to Veeqo</Jumbotron>\r\n      {showInitialView ? (\r\n        <>\r\n          <Header>Select data source</Header>\r\n          <Select\r\n            options={IMPORT_VENDORS}\r\n            objectTitleKey=\"title\"\r\n            onChange={handleVendorChange}\r\n            useObjects={true}\r\n          />\r\n          {loading ? (\r\n            <Spinner style={{ marginTop: \"60px\" }} />\r\n          ) : (\r\n            <FileUploadArea\r\n              selectedVendor={pageVariables.selectedVendor}\r\n              handleFileSubmit={getOrders}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <OrdersView\r\n          orders={orders}\r\n          file={file}\r\n          handleEditAddressClick={handleEditAddressClick}\r\n          handleCheckboxClick={handleCheckboxClick}\r\n          handleImportClick={handleImportClick}\r\n          setInitialState={setInitialState}\r\n        />\r\n      )}\r\n      <ImportPageModal\r\n        isOpen={modalOpen}\r\n        toggle={toggle}\r\n        modalType={\"editAddress\"}\r\n        addresses={addresses}\r\n        handleUpdateAddress={handleUpdateAddress}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportPage;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { UPDATE_VENDORS } from \"../../config\";\r\nimport * as api from \"../../api/BackendApi\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Jumbotron, Spinner, Select, Header } from \"../Shared\";\r\n\r\nfunction UpdatePage() {\r\n  const initialVendor = UPDATE_VENDORS[0];\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedVendor, setSelectedVendor] = useState(initialVendor);\r\n\r\n  function handleUpdateClick() {\r\n    setLoading(true);\r\n\r\n    var params = {\r\n      vendor: selectedVendor.name,\r\n    };\r\n\r\n    api.updateSpreadsheet(params).then((orders) => {\r\n      if (orders.length > 0) {\r\n        toast.dark(`Added ${orders.length} order(s)`);\r\n      } else {\r\n        toast.dark(\"No orders added\");\r\n      }\r\n\r\n      setLoading(false);\r\n      setSelectedVendor(initialVendor);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Update Google Spreadsheet</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ width: \"70px\", height: \"70px\", marginTop: \"50px\" }} />\r\n      ) : (\r\n        <>\r\n          <Header>Select Spreadsheet</Header>\r\n          <Select\r\n            options={UPDATE_VENDORS}\r\n            objectTitleKey=\"title\"\r\n            onChange={setSelectedVendor}\r\n            useObjects={true}\r\n          />\r\n          <Button onClick={handleUpdateClick}>Update</Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePage;\r\n","import React from \"react\";\r\n\r\nimport { FormGroup, Label, Input, Button } from \"reactstrap\";\r\n\r\nfunction EventForm({ formState, onFormChange, onSubmit, toggleView }) {\r\n  const { title, date, time, length } = formState;\r\n\r\n  return (\r\n    <div style={{ width: \"400px\" }}>\r\n      <FormGroup>\r\n        <Label>Title</Label>\r\n        <Input name=\"title\" type=\"text\" value={title} onChange={onFormChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Date</Label>\r\n        <Input type=\"date\" name=\"date\" value={date} onChange={onFormChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Time</Label>\r\n        <Input type=\"time\" name=\"time\" value={time} onChange={onFormChange} />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Length (min)</Label>\r\n        <Input type=\"select\" name=\"length\" value={length} onChange={onFormChange}>\r\n          <option value=\"15\">15</option>\r\n          <option value=\"30\">30</option>\r\n          <option value=\"45\">45</option>\r\n          <option value=\"60\">60</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <div className=\"centered-parent\">\r\n        <Button color=\"danger\" onClick={toggleView}>\r\n          Back\r\n        </Button>\r\n        <Button onClick={onSubmit}>Create</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventForm;\r\n","import React from \"react\";\r\nimport \"./CalendarPage.css\";\r\n\r\nimport { FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport { Select, MultiSelect } from \"../Shared\";\r\n\r\nfunction InitialView({ formState, onFormChange, calendars, emails, toggleView }) {\r\n  const { orderUrl, calendar, attendees } = formState;\r\n\r\n  return (\r\n    <div className=\"event-form\">\r\n      <FormGroup>\r\n        <Label>Veeqo Order URL</Label>\r\n        <Input\r\n          name=\"orderUrl\"\r\n          type=\"text\"\r\n          placeholder=\"URL\"\r\n          value={orderUrl}\r\n          onChange={onFormChange}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Select Calendar</Label>\r\n        <Select\r\n          name=\"calendar\"\r\n          options={calendars}\r\n          objectTitleKey=\"summary\"\r\n          value={calendar.summary}\r\n          onChange={onFormChange}\r\n          useObjects={true}\r\n          style={{ marginBottom: \"10px\", width: \"250px\" }}\r\n        />\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label>Attendees</Label>\r\n        <MultiSelect\r\n          name=\"attendees\"\r\n          options={attendees}\r\n          onChange={onFormChange}\r\n          predefinedSuggestions={emails}\r\n        />\r\n      </FormGroup>\r\n      <Button onClick={toggleView}>Next</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InitialView;\r\n","import React, { useState, useReducer, useEffect } from \"react\";\r\nimport \"./CalendarPage.css\";\r\n\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport * as api from \"../../api/BackendApi\";\r\nimport { EMAILS } from \"../../config\";\r\nimport { reducer } from \"../utils\";\r\nimport { Jumbotron, Spinner } from \"../Shared\";\r\nimport FormView from \"./FormView\";\r\nimport InitialView from \"./InitialView\";\r\n\r\nconst defaultAttendees = [\r\n  EMAILS[0],\r\n  EMAILS[1],\r\n]\r\n\r\nconst initialFormState = {\r\n  orderUrl: \"\",\r\n  calendar: null,\r\n  attendees: defaultAttendees,\r\n  title: \"\",\r\n  date: \"\",\r\n  time: \"\",\r\n  length: \"30\",\r\n};\r\n\r\nfunction CalendarPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [view, setView] = useState(\"initial\");\r\n  const [formState, setFormState] = useReducer(reducer, initialFormState);\r\n\r\n  const [calendars, setCalendars] = useState([]);\r\n  const [order, setOrder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  function fetchData() {\r\n    api.getCalendars().then((response) => {\r\n      onFormChange(response[0], \"calendar\");\r\n      setCalendars(response);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function toggleView() {\r\n    if (view === \"initial\") {\r\n      var params = {\r\n        orderUrl: formState.orderUrl,\r\n      };\r\n\r\n      api.getVeeqoOrder(params).then((response) => {\r\n        onResponse(response, () => {\r\n          toast.dark(`Using order ${response.number}`);\r\n          setOrder(response);\r\n          setView(\"form\");\r\n        });\r\n      });\r\n    } else {\r\n      setView(\"initial\");\r\n    }\r\n  }\r\n\r\n  function onFormChange(event, name) {\r\n    if (name) {\r\n      setFormState({ [name]: event });\r\n    } else {\r\n      const { name, value } = event.target;\r\n      setFormState({ [name]: value });\r\n    }\r\n  }\r\n\r\n  function createEvent() {\r\n    const { calendar, title, date, time, length, attendees } = formState;\r\n\r\n    if (title !== \"\" && date !== \"\" && time !== \"\") {\r\n      setLoading(true);\r\n\r\n      var datetime = `${date} ${time}`;\r\n      var format = \"YYYY-MM-DD HH-mm\";\r\n      var start = moment(datetime, format);\r\n\r\n      var params = {\r\n        event: {\r\n          order: order,\r\n          calendar: calendar,\r\n          attendees: attendees,\r\n          title: title,\r\n          start: start.toISOString(),\r\n          end: start.add(length, \"minutes\").toISOString(),\r\n        },\r\n      };\r\n\r\n      api.createEvent(params).then((response) => {\r\n        setLoading(false);\r\n        \r\n        onResponse(response, () => {\r\n          toast.dark(\"Event added successfully\");\r\n          setInitialState();\r\n        });\r\n      });\r\n    } else {\r\n      toast.dark(\"No inputs may be empty\");\r\n    }\r\n  }\r\n\r\n  function onResponse(response, onSuccess) {\r\n    if (response.error) {\r\n      toast.error(response.message);\r\n    } else {\r\n      onSuccess(response);\r\n    }\r\n  }\r\n\r\n  function setInitialState() {\r\n    setFormState({\r\n      ...initialFormState,\r\n      calendar: calendars[0],\r\n    });\r\n    setOrder(null);\r\n    setView(\"initial\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Create Event</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ marginTop: \"120px\" }} />\r\n      ) : view === \"initial\" ? (\r\n        <InitialView\r\n          formState={formState}\r\n          onFormChange={onFormChange}\r\n          calendars={calendars}\r\n          emails={EMAILS}\r\n          toggleView={toggleView}\r\n        />\r\n      ) : (\r\n        <FormView\r\n          formState={formState}\r\n          onFormChange={onFormChange}\r\n          onSubmit={createEvent}\r\n          toggleView={toggleView}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CalendarPage;\r\n","import React, { useState } from \"react\";\r\nimport \"./TurnoverPage.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\n\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Form, Input } from \"reactstrap\";\r\nimport { Jumbotron, Spinner, Card, Header } from \"../../Shared\";\r\n\r\nfunction TurnoverPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [turnover, setTurnover] = useState(null);\r\n\r\n  let currentMonth = moment().format(\"YYYY-MM\");\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { value } = event.target.elements.date;\r\n\r\n    if (value) {\r\n      setTurnover(null);\r\n      setLoading(true);\r\n\r\n      var params = {\r\n        start: moment(value).startOf(\"month\").format(\"YYYY/MM/DD\"),\r\n        end: moment(value).endOf(\"month\").format(\"YYYY/MM/DD\"),\r\n      };\r\n\r\n      api.getTurnover(params).then((json) => {\r\n        setTurnover(json);\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      toast.dark(\"Please select a date\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Turnover</Jumbotron>\r\n\r\n      <Form onSubmit={onSubmit} className=\"date-form\">\r\n        <Header>Select Month</Header>\r\n        <Input type=\"month\" name=\"date\" min=\"2017-04\" max={currentMonth} />\r\n        <Button type=\"submit\">Calculate</Button>\r\n      </Form>\r\n\r\n      {loading && <Spinner style={{ marginTop: \"50px\" }} />}\r\n      {turnover && (\r\n        <div className=\"totals-wrapper\">\r\n          <Card header=\"Total excluding VAT\" text={`£${turnover.total_ex_vat}`} />\r\n          <Card header=\"Total including VAT\" text={`£${turnover.total_with_vat}`} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TurnoverPage;\r\n","import React, { Fragment } from \"react\";\r\nimport \"./OrderWell.css\";\r\n\r\nimport { Table } from \"reactstrap\";\r\n\r\nfunction OrderWellTable({ orders }) {\r\n  return (\r\n    <Table bordered striped size=\"sm\" id=\"orderwell-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Order Number</th>\r\n          <th>Items</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {orders.map((order, index) => (\r\n          <tr key={index}>\r\n            <td>{order.date}</td>\r\n            <td>\r\n              <a target=\"_blank\" href={order.url} rel=\"noopener noreferrer\">\r\n                {order.id}\r\n              </a>\r\n            </td>\r\n            <td>\r\n              {order.items.map((item, index) => (\r\n                <Fragment key={index}>\r\n                  {index > 0 && <br />}\r\n                  {item}\r\n                </Fragment>\r\n              ))}\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nexport default OrderWellTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./OrderWell.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\n\r\nimport { Button } from \"reactstrap\";\r\nimport { Jumbotron, Spinner } from \"../../Shared\";\r\nimport OrderWellTable from \"./OrderWellTable\";\r\n\r\nfunction OrderWell() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [orders, setOrders] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchData() {\r\n    await api.getOrderWell().then((orders) => {\r\n      setOrders(orders);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  function handleCopyClick() {\r\n    var el = document.getElementById(\"orderwell-table\");\r\n\r\n    var body = document.body,\r\n      range,\r\n      sel;\r\n    if (document.createRange && window.getSelection) {\r\n      range = document.createRange();\r\n      sel = window.getSelection();\r\n      sel.removeAllRanges();\r\n      try {\r\n        range.selectNodeContents(el);\r\n        sel.addRange(range);\r\n      } catch (e) {\r\n        range.selectNode(el);\r\n        sel.addRange(range);\r\n      }\r\n    } else if (body.createTextRange) {\r\n      range = body.createTextRange();\r\n      range.moveToElementText(el);\r\n      range.select();\r\n    }\r\n    document.execCommand(\"Copy\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Order Well</Jumbotron>\r\n      {loading ? (\r\n        <Spinner style={{ marginTop: \"120px\" }} />\r\n      ) : (\r\n        <>\r\n          <Button onClick={handleCopyClick}>Copy</Button>\r\n          <OrderWellTable orders={orders} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderWell;\r\n","import React, { useReducer, useState } from \"react\";\r\nimport \"./ComparisonPage.css\";\r\n\r\nimport * as api from \"../../../api/BackendApi\";\r\nimport { reducer } from \"../../utils\";\r\n\r\nimport moment from \"moment\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport \"react-dates/initialize\";\r\nimport { DateRangePicker } from \"react-dates\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport { Button } from \"reactstrap\";\r\nimport { Jumbotron, Header, Spinner, Card } from \"../../Shared\";\r\n\r\nconst intialDatesState = {\r\n  startDate: null,\r\n  endDate: null,\r\n  focusedInput: null,\r\n};\r\n\r\nfunction ComparisonPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dates, setDates] = useReducer(reducer, intialDatesState);\r\n\r\n  const [sales, setSales] = useState(null);\r\n  const [previousSales, setPreviousSales] = useState(null);\r\n\r\n  const setFocusedInput = (focusedInput) => setDates({ focusedInput: focusedInput });\r\n\r\n  async function fetchData(params, previousParams) {\r\n    await api.getTurnover(params).then((json) => {\r\n      setSales(json);\r\n    });\r\n    await api.getTurnover(previousParams).then((json) => {\r\n      setPreviousSales(json);\r\n    });\r\n  }\r\n\r\n  async function onSubmit() {\r\n    const { startDate, endDate } = dates;\r\n\r\n    if (startDate && endDate) {\r\n      setSales(null);\r\n      setPreviousSales(null);\r\n      setLoading(true);\r\n\r\n      var params = {\r\n        start: startDate.format(\"YYYY/MM/DD\"),\r\n        end: endDate.format(\"YYYY/MM/DD\"),\r\n      };\r\n\r\n      var previousParams = {\r\n        start: startDate.clone().subtract(1, \"years\").format(\"YYYY/MM/DD\"),\r\n        end: endDate.clone().subtract(1, \"years\").format(\"YYYY/MM/DD\"),\r\n      };\r\n\r\n      await fetchData(params, previousParams);\r\n\r\n      setLoading(false);\r\n    } else {\r\n      toast.dark(\"Please select both dates\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Jumbotron>Sales Comparison</Jumbotron>\r\n      <Header>Select Date Range</Header>\r\n      <DateRangePicker\r\n        startDate={dates.startDate}\r\n        startDateId=\"1\"\r\n        endDate={dates.endDate}\r\n        endDateId=\"2\"\r\n        onDatesChange={setDates}\r\n        focusedInput={dates.focusedInput}\r\n        onFocusChange={setFocusedInput}\r\n        isOutsideRange={(day) =>\r\n          day.isBefore(moment(\"04/2018\", \"MM/YYYY\")) || day.isAfter(moment())\r\n        }\r\n        displayFormat=\"DD/MM/YYYY\"\r\n      />\r\n      <Button onClick={onSubmit} className=\"calc-button\">\r\n        Calculate\r\n      </Button>\r\n\r\n      {loading && <Spinner style={{ marginTop: \"50px\" }} />}\r\n      {sales && previousSales && (\r\n        <div className=\"totals-wrapper\">\r\n          <Card\r\n            header={\"Previous Year\"}\r\n            text={previousSales.total_with_vat}\r\n            description={\"*With VAT\"}\r\n          />\r\n          <Card\r\n            header={\"Selected Year\"}\r\n            text={sales.total_with_vat}\r\n            description={\"*With VAT\"}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ComparisonPage;\r\n","import React from \"react\";\r\n\r\nimport { Jumbotron } from \"./Shared\";\r\n\r\nfunction PageNotFound() {\r\n  return <Jumbotron>404 - Page not found</Jumbotron>;\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faUpload,\r\n  faPlus,\r\n  faPencilAlt,\r\n  faTrashAlt,\r\n  faTimes,\r\n  faChevronDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport Navbar from \"./components/Navbar\";\r\nimport Homepage from \"./components/Homepage\";\r\nimport ImportPage from \"./components/import/ImportPage\";\r\nimport UpdatePage from \"./components/update/UpdatePage\";\r\nimport CalendarPage from \"./components/calendar/CalendarPage\";\r\nimport TurnoverPage from \"./components/bandq/turnover/TurnoverPage\";\r\nimport OrderWellPage from \"./components/bandq/orderwell/OrderWellPage\";\r\nimport ComparisonPage from \"./components/bandq/comparison/ComparisonPage\";\r\nimport PageNotFound from \"./components/PageNotFound\";\r\n\r\nlibrary.add({\r\n  faUpload,\r\n  faPlus,\r\n  faPencilAlt,\r\n  faTrashAlt,\r\n  faTimes,\r\n  faChevronDown,\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Navbar />\r\n        <ToastContainer hideProgressBar={true} autoClose={3000} />\r\n\r\n        <div className=\"wrapper\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Homepage} />\r\n            <Route path=\"/update\" component={UpdatePage} />\r\n            <Route path=\"/import/\" component={ImportPage} />\r\n            <Route path=\"/calendar/\" component={CalendarPage} />\r\n\r\n            <Route path=\"/bandq/turnover\" component={TurnoverPage} />\r\n            <Route path=\"/bandq/orderwell\" component={OrderWellPage} />\r\n            <Route path=\"/bandq/comparison\" component={ComparisonPage} />\r\n            \r\n            <Route component={PageNotFound} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}